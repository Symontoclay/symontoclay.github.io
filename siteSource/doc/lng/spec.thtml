<h1 class='center-h'>
SymOntoClay language specification
</h1>

<ContentsPlace/>

<h2 class='center-h' data-href="Notation_chapter">
    Notation
</h2>

<LinkToContent/>

<p>
The syntax is specified using <ico target="Wikipedia"/><a href='https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form'>Extended Backus-Naur Form (EBNF)</a>.
</p>

<h2 class='center-h' data-href="Source_code_representation_chapter">
    Source code representation
</h2>

<LinkToContent/>

<p>
Source ebnf-code is Unicode text encoded in <ico target="Wikipedia"/><a href='https://en.wikipedia.org/wiki/UTF-8'>UTF-8</a>.
</p>

<p>
But I will prefer symbols which are defined in <ico target="Wikipedia"/><a href='https://en.wikipedia.org/wiki/ASCII'>ASCII</a>.
Except some special symbols which are defined in Unicode only.
</p>

<h3 class='center-h' data-href="Characters_chapter">
    Characters
</h3>

<LinkToContent/>

<p>
The following terms are used to denote specific Unicode character classes:
</p>

<gr>
<EBNFCDECL name='newline'/> = /* the Unicode ebnf-code point U+000A */ .
<EBNFCDECL name='unicode_char'/> = /* an arbitrary Unicode ebnf-code point except newline */ .
<EBNFCDECL name='unicode_letter'/> = /* a Unicode ebnf-code point classified as "Letter" */ .
<EBNFCDECL name='unicode_digit'/>  = /* a Unicode ebnf-code point classified as "Number, decimal digit" */ .
</gr>

<h3 class='center-h' data-href="Letters_and_digits_chapter">
    Letters and digits
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='letter'/> = "A" ... "Z" | "a" ... "z" | "_" .
<EBNFCDECL name='decimal_digit'/> = "0" … "9" .
</gr>

<p>
Letters are Latin-1 characters from "A" to "Z" and from "a" to "z".
The underscore character _ (U+005F) is also considered a letter.
</p>

<p>
Now I will not supports letters of other languages.
</p>

<p>
Digits are characters from "0" to "9".
</p>

<h2 class='center-h' data-href="Lexical_elements_chapter">
    Lexical elements
</h2>

<LinkToContent/>

<h3 class='center-h' data-href="Identifiers_chapter">
    Identifiers
</h3>

<LinkToContent/>

<p>
Identifiers name program entities such as variables and types.
</p>

<gr>
<EBNFCDECL name='Identifier'/> = <GEBNFC name='Identifier' kind='or' /> .
<EBNFCDECL name='ConceptIdentifier' groups='Identifier;Expr'/> = ( <EBNFC name='letter'/> { <EBNFC name='letter'/> | <EBNFC name='decimal_digit'/> } ) | ( "`" { <EBNFC name='unicode_char'/> } "`") .
<EBNFCDECL name='VarIdentifier' groups='Identifier;Expr'/> = "@"<EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='SysVarOrOpIdentifier' groups='Identifier;Expr'/> = "@@"<EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='ConditionalEntityIdentifier' groups='Identifier;Expr'/> = "#@"<EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='InstanceIdentifier' groups="Identifier;TypeIdentifier;Expr"/> = "#"<EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='ShortConditionalEntityIdentifier' groups='Identifier;Expr'/> = "##"<EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='QueryVarIdentifier' groups='Identifier;Expr'/> = "?"<EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='DataSourceIdentifier' groups='Identifier;Expr'/> = "@:"<EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='EventIdentifier' groups='Identifier;Expr'/> = "@>"<EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='ScopeTargetIdentifier' groups='Identifier;Expr'/> = ":::"<EBNFC name='ConceptIdentifier'/> .
</gr>

<p>
There are two ways of defining identifiers: classical and by grave accents (symbol "`").
It is like in MySQL.
</p>

<p>
In defining by classic way identifier must start by letter or underscore character and after it may have any count of letters, digits or  underscore characters.
For example:
</p>

<pre class='ebnf-code'>
a
_a
a2
aB
ab_1
Great_Britain
</pre>

<p>
The second way is defining identifier between two grave accents like It is in MySQL.
For example:
</p>

<pre class='ebnf-code'>
`Great Britain`
`Set (mathematics)`
`1`
`b 1`
</pre>

<p>
First of all this way allows us write identifiers similar to natural languages.
</p>

<p>
Secondly we can define <a href="#Namespaces_chapter">namespace</a> of the identifier by round brackets, like in wikipedia.
For example, in identifier `Set (mathematics)` part `Set` is identifier and part `(mathematics)` is defining namespace `mathematics`.
</p>

<p>
Read more about Namespaces <a href="#Namespaces_chapter">here</a>.
</p>

<h3 class='center-h' data-href="Keywords_chapter">
    Keywords
</h3>

<LinkToContent/>

<p>
The following keywords are reserved and may not be used as identifiers which are defined by classic way. 
</p>

<pre class='ebnf-code'>
<span class='keyword'>obj</span>
<span class='keyword'>app</span>
<span class='keyword'>class</span>
<span class='keyword'>namespace</span>
<span class='keyword'>module</span>
<span class='keyword'>using</span>
<span class='keyword'>on</span>
<span class='keyword'>except</span>
<span class='keyword'>do</span>
<span class='keyword'>trigger</span>
<span class='keyword'>func</span>
<span class='keyword'>prop</span>
<span class='keyword'>process</span>
<span class='keyword'>state</span>
<span class='keyword'>inst</span>
<span class='keyword'>supervisor</span>
<span class='keyword'>value</span>
<span class='keyword'>range</span>
<span class='keyword'>dim</span>
<span class='keyword'>fuzzy</span>
<span class='keyword'>set</span>
<span class='keyword'>terms</span>
<span class='keyword'>operators</span>
<span class='keyword'>using</span>
<span class='keyword'>import</span>
<span class='keyword'>public</span>
<span class='keyword'>published</span>
<span class='keyword'>protected</span>
<span class='keyword'>internal</span>
<span class='keyword'>private</span>
<span class='keyword'>just</span>
<span class='keyword'>for</span>
<span class='keyword'>of</span>
<span class='keyword'>with</span>
<span class='keyword'>def</span>
<span class='keyword'>is</span>
<span class='keyword'>while</span>
<span class='keyword'>foreach</span>
<span class='keyword'>break</span>
<span class='keyword'>continue</span>
<span class='keyword'>return</span>
<span class='keyword'>yield</span>
<span class='keyword'>if</span>
<span class='keyword'>elif</span>
<span class='keyword'>else</span>
<span class='keyword'>try</span>
<span class='keyword'>catch</span>
<span class='keyword'>finally</span>
<span class='keyword'>error</span>
<span class='keyword'>type</span>
<span class='keyword'>select</span>
<span class='keyword'>insert</span>
<span class='keyword'>delete</span>
<span class='keyword'>merge</span>
<span class='keyword'>unmerge</span>
<span class='keyword'>new</span>
<span class='keyword'>clone</span>
<span class='keyword'>deep</span>
<span class='keyword'>as</span>
<span class='keyword'>modal</span>
<span class='keyword'>wait</span>
<span class='keyword'>lock</span>
<span class='keyword'>exclusive</span>
<span class='keyword'>delm</span>
<span class='keyword'>dels</span>
<span class='keyword'>delsm</span>
<span class='keyword'>make</span>
<span class='keyword'>in</span>
</pre>

<h3 class='center-h' data-href="Operators_and_punctuation_chapter">
    Operators and punctuation
</h3>

<LinkToContent/>

<p>
The following character sequences represent <a href='#Operators_chapter'>operators</a> and punctuation:
</p>

<pre class='ebnf-code'>
::    (    )
</pre>

<h3 class='center-h' data-href="Null_literal_chapter">
    Null literal
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='NullLiteral'/> = "null" | "Null" .
</pre>

<h3 class='center-h' data-href="Numbers_literals_chapter">
    Numbers literals
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='NumberLiteral'/> = <EBNFC name='IntegerLiteral'/> | <EBNFC name='FloatPointLiteral'/> .
<EBNFCDECL name='IntegerLiteral'/> = <EBNFC name='decimal_digit'/> [ { <EBNFC name='decimal_digit'/> } ] .
<EBNFCDECL name='FloatPointLiteral'/> = <EBNFC name='IntegerLiteral'/> "." <EBNFC name='IntegerLiteral'/> .
</gr>

<h3 class='center-h' data-href="Boolean_literals_chapter">
    Boolean literals
</h3>

<LinkToContent/>

<p>
   SumOntoClay uses usual number in range [0;1] as boolean literal instead of a special literal.
</p>

<pre class='ebnf-code'>
<EBNFCDECL name='BooleanLiteral'/> = <EBNFC name='NumberLiteral'/> .
</pre>

<h3 class='center-h' data-href="Strings_literals_chapter">
    Strings literals
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='StringLiteral'/> = (""" <EBNFC name='unicode_char'/> [{ <EBNFC name='unicode_char'/> }] """) | ("'" <EBNFC name='unicode_char'/> [{ <EBNFC name='unicode_char'/> }] "'").
</gr>

<h3 class='center-h' data-href="Date_and_time_literals_chapter">
    Date and time literals
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='DateTimeLiteral'/> = <GEBNFC name='DateTimeLiteral' kind='or' /> .
<EBNFCDECL name='NowDateTimeLiteral' groups="DateTimeLiteral"/> = "now" .
<EBNFCDECL name='PresentDateTimeLiteral' groups="DateTimeLiteral"/> = "present" .
<EBNFCDECL name='FutureDateTimeLiteral' groups="DateTimeLiteral"/> = "future" .
<EBNFCDECL name='PastDateTimeLiteral' groups="DateTimeLiteral"/> = "past" .
</gr>

<h3 class='center-h' data-href="Ordered_type_literals_chapter">
    Ordered type literals
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='OrderedTypeLiteral'/> = <EBNFC name='NumberLiteral'/> | <EBNFC name='StringLiteral'/> | <EBNFC name='DateTimeLiteral'/> | <EBNFC name='BooleanLiteral'/>.
</gr>


<h2 class='center-h' data-href="Types_chapter">
    Types
</h2>

<LinkToContent/>

<gr>
<EBNFCDECL name='TypeIdentifier' groups='Expr'/> = <GEBNFC name='TypeIdentifier' kind='or' /> .
</gr>

<h3 class='center-h' data-href="Object-oriented_programming_chapter">
    Object-oriented programming
</h3>

<LinkToContent/>

<p>
As in other <ico target="Wikipedia"></ico><a href='https://en.wikipedia.org/wiki/Object-oriented_programming'>object-oriented</a> languages, the central concept in SymOntoClay is that of an object.
An object is always an <i>instance</i> of a <a href='#Classes_chapter'><i>class</i></a>.	
</p>

<p>
Each object can be changed both in design and run time.
We can change set of members and inheritance relationship.
The ways of doing this will be described below in here section and in describing of <a href='#Classes_chapter'>classes</a>.
</p>

<h4 class='center-h' data-href="Object_declaration_chapter">
    Object declaration
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='ObjectDeclsSet'/> = <TEBNFC name='DeclSet' param = 'ObjectDecl'/> .
<EBNFCDECL name='ObjectDecl'/> = <GEBNFC name='ObjectDecl' kind='or' /> .
<EBNFCDECL name='UniversalTypeIdentifier' groups='TypeIdentifier'/> = "any" | "⊤" .
<EBNFCDECL name='ObjectDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'ObjectDecl' /> .
<EBNFCDECL name='ClassIdentifier' groups="TypeIdentifier"/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='ShortObjectDecl' groups='ObjectDecl'/> = .
<EBNFCDECL name='LongObjectDecl' groups='ObjectDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "obj" <EBNFC name='GenericParametersDecl'/> <EBNFC name='ClassIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] </br>
			 [ "{" { <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='InheritanceDecl'/> = "is" ( <EBNFC name='InheritanceDeclItem'/> [{ "," <EBNFC name='InheritanceDeclItem'/> }] ) | ( "{(" <EBNFC name='InheritanceDeclItem'/> [ ";" { <EBNFC name='InheritanceDeclItem'/> ";" } ] ")}" ) .
<EBNFCDECL name='InheritanceDeclItem'/> = [ <EBNFC name='AnnotationsList'/> ] <EBNFC name='TypeIdentifier'/> [ "[" <EBNFC name='BooleanTypeExpr'/> "]" ] .
<EBNFCDECL name='GenericParametersDecl'/> = "(<" <EBNFC name='GenericParameter'/> [{ "," <EBNFC name='GenericParameter'/> }] ">)" .
<EBNFCDECL name='GenericParameter'/> = .
<EBNFCDECL name='ClausedScopeForObjectsSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForObjectsSet'/> .
<EBNFCDECL name='ClausedScopeForObjectsSet' groups='ObjectTypeDecls'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForObject'/> .
<EBNFCDECL name='ClausedScopeForObject '/> = <TEBNFC name='DefScope_2' param = "{ <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> }"/> .
</gr>

<h4 class='center-h' data-href="Method_chapter">
    Methods
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='MethodsSet' groups='ObjectMembers'/> = <TEBNFC name='DeclSet' param = 'Method'/> .
<EBNFCDECL name='Method'/> = <EBNFC name='FunctionDecl'/> .
<EBNFCDECL name='MethodDeclExpr' groups="Expr"/> = <EBNFC name="FunctionDeclExpr" groups="Expr"/> .
</gr>

<h4 class='center-h' data-href="OpOverloadingMember_chapter">
    Operator overloading
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='OpOverloadingMemberDeclsSet' groups='ObjectMembers'/> = <TEBNFC name='DeclSet' param = 'OpOverloadingMemberDecl'/> .
<EBNFCDECL name='OpOverloadingMemberDecl'/> = <EBNFC name='OpOverloadingDecl'/> .
<EBNFCDECL name='OpOverloadingMemberDeclExpr'/> = <EBNFC name='OpOverloadingDeclExpr'/> .
</gr>

<h4 class='center-h' data-href="Restriction_of_field_chapter">
    Restriction of field
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='RestrictionsOfFieldsSet' groups="ObjectMembers"/> = <TEBNFC name='DeclSet' param = 'RestrictionOfField'/> .
<EBNFCDECL name='RestrictionOfField'/> = [ <EBNFC name='AnnotationsList'/> ] "prop" <EBNFC name='PropertyName'/> [ ":" [ <EBNFC name='PropertyType'/> ] [ <EBNFC name='PropertyPower'/> ] 
               [ "/" <EBNFC name='PropertyHistoryPower'/> ]] [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='RestrictionOfFieldExprDecl' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'RestrictionOfField'/> .
<EBNFCDECL name='PropertyName'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='PropertyType'/> = <EBNFC name='TypeIdentifier'/> .
<EBNFCDECL name='PropertyPower'/> = "[" ( "*" | "∞" | <EBNFC name='NumericTypeExpr'/> ) "]" .
<EBNFCDECL name='PropertyHistoryPower'/> = "[" ( "-" | "*" | "∞" | <EBNFC name='NumericTypeExpr'/> ) "]" .
</gr>

<pre class='tmp_tchn' title='It is just tech remark for creating this spec!'>
PropertyPower - by default 1.
PropertyHistoryPower - by default 0.
</pre>      

<h4 class='center-h' data-href="Member_variable_chapter">
Member-variable
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='VarMemberDeclSet' groups="ObjectMembers"/> = <TEBNFC name='DeclSet' param = 'VarMemberDecl'/> .
<EBNFCDECL name='VarMemberDecl'/> .
<EBNFCDECL name='VarMemberDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'VarMemberDecl'/> .
</gr>
	  
<h4 class='center-h' data-href="Block_of_facts_chapter">
    Block of facts
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='BlocksOfFactsSet' groups="ObjectMembers"/> = <TEBNFC name='DeclSet' param = 'BlockOfFacts'/> .
<EBNFCDECL name='BlockOfFacts'/> = <EBNFC name='FactDeclsSet'/> .
</gr>

<h4 class='center-h' data-href="Block_of_logical_rules_chapter">
    Block of logical rules
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='BlocksOfLogicalRulesSet' groups="ObjectMembers"/> = <TEBNFC name='DeclSet' param = 'BlockOfLogicalRules'/> .
<EBNFCDECL name='BlockOfLogicalRules'/> = <EBNFC name='LogicalRuleDeclsSet'/> .
</gr>

<h4 class='center-h' data-href="exception_handlers_chapter">
    Exception handler
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='ExceptionHandlersSet' groups="ObjectMembers"/> = <TEBNFC name='DeclSet' param = 'ExceptionHandler'/> .
<EBNFCDECL name='ExceptionHandler'/> .
<EBNFCDECL name='ExceptionHandlerDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ExceptionHandler'/> .
</gr>

<h4 class='center-h' data-href="Member-event_chapter">
    Member-event
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='EventMemberDeclSet' groups="ObjectMembers"/> = <TEBNFC name='DeclSet' param = 'EventMemberDecl'/> .
<EBNFCDECL name='EventMemberDecl'/> .
<EBNFCDECL name='EventMemberDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'EventMemberDecl'/> .
</gr>

<h3 class='center-h' data-href="Class_chapter">
    Class
</h3>

<LinkToContent/>

<p>
There is not strict differences between class and instance here.
But dividing class from other objects makes working more convenient.
Declaring classes is very familiar feature or common languages and many languages without classes (for instance <ico target="Wikipedia"></ico><a href='https://en.wikipedia.org/wiki/ECMAScript'>JavaScript/ECMAScript</a>) added this to own syntax.
</p>

<p>
There are two types of clases: usual class (next just <i>class</i>) and <i>application</i>.
<i>Application</i> is the similar to <i>class</i> but also It has additional functionality.
You can read more about it <a href='#Applications_chapter'>here</a>.
</p>

<h4 class='center-h' data-href="Class_declaration_chapter">
    Declaration
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='ClassIdentifier' groups="TypeIdentifier"/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='ClassDeclsSet' groups="ObjectTypeDecls;SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'ClassDecl'/> .
<EBNFCDECL name='ClassDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "class" <EBNFC name='GenericParametersDecl'/> <EBNFC name='ClassIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] </br>
			 [ "{" { <br/> <GEBNFC name='ClassMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='ClassDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClassDecl' /> .
<EBNFCDECL name='ClausedScopeForClassesSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForClassesSet'/> .
<EBNFCDECL name='ClausedScopeForClassesSet' groups='ClassMembers'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForClass'/> .
<EBNFCDECL name='ClausedScopeForClass '/> = <TEBNFC name='DefScope_2' param = "{ <br/> <GEBNFC name='ClassMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> }"/> .
</gr>

<h3 class='center-h' data-href="Namespace_chapter">
    Namespace
</h3>

<LinkToContent/>

<p>
The common explanation of namespace concept is <ico target="Wikipedia"></ico><a href='https://en.wikipedia.org/wiki/Namespace'>here</a>.
Next I will explain the details of namespaces in SymOntoClay.
</p>

<h4 class='center-h' data-href="Defining_namespace_in_identifier_chapter"> 
Defining namespace in identifier
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='identifier_with_namespace'/> = <EBNFC name='ConceptIdentifier'/> "::" { <EBNFC name='ConceptIdentifier'/> "::" } <EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='instance_identifier_with_namespace'/> = <EBNFC name='ConceptIdentifier'/> "::" { <EBNFC name='ConceptIdentifier'/> "::" } <EBNFC name='InstanceIdentifier'/> .
</gr>

<pre class='ebnf-code'>
mathematics::Set
</pre>

<h4 class='center-h' data-href="Defining_namespace_by_round_brackets_chapter">
Defining namespace by round brackets
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='identifier_with_namespace'/> = "`" <EBNFC name='ConceptIdentifier'/> "(" ( <EBNFC name='identifier_with_namespace'/> | <EBNFC name='ConceptIdentifier'/> ) ")" "`" .
<EBNFCDECL name='instance_identifier_with_namespace'/> = "`" <EBNFC name='InstanceIdentifier'/> "(" ( <EBNFC name='identifier_with_namespace'/> | <EBNFC name='ConceptIdentifier'/> ) ")" "`" .
</gr>

<pre class='ebnf-code'>
`Set (mathematics)`
</pre>

<h4 class='center-h' data-href="Defining_namespace_as_statement_chapter">
Defining namespace as statement
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='NamespaceDeclsSet' groups="SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'NamespaceDecl'/> .
<EBNFCDECL name='NamespaceDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "namespace" ( <EBNFC name='identifier_with_namespace'/> | <EBNFC name='ConceptIdentifier'/> ) "{" [ <EBNFC name='ClausedScopeForSourceCodeFilesSet'/> ] <EBNFC name='SourceCodeFileContent'/> [ <EBNFC name='ClausedScopeForSourceCodeFilesSet'/> ] "}" [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='NamespaceDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'NamespaceDecl'/> .
</pre>

<pre class='ebnf-code'>
<span class='keyword'>namespace</span> mathematics {
}
</pre>

<h4 class='center-h' data-href="Using_identifiers_from_different_namespaces_chapter">
Using identifiers from different namespaces
</h4>

<LinkToContent/>

<p>
We can use identifiers form the same namespace both without explicit writing this identifier of the namespace and with such writing.
</p>

<p>
If identifiers are in different namespaces we can use identifier with namespace or use "using" statement. 
</p>

<p>
"using" statement allow us to use identifiers without those identifiers of namespaces which was resolved by the statement.
</p>

<gr>
<EBNFCDECL name='UsingStatement'/> = "using" <EBNFC name='ConceptIdentifier'/> "::" { <EBNFC name='ConceptIdentifier'/> "::" } <EBNFC name='ConceptIdentifier'/> ";"
<EBNFCDECL name='UsingStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'UsingStatement'/> .
</gr>

<pre class='ebnf-code'>
<span class='keyword'>using</span> mathematics;
<span class='keyword'>using</span> mathematics::geometry;
</pre>

<p>
"using" statement can be used both in root of source ebnf-code file and into other statements with figure brackets.
</p>

<h3 class='center-h' data-href="Module_chapter">
    Module
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ModuleDeclsSet' groups="SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'ModuleDecl'/> .
<EBNFCDECL name='ModuleIdentifier' groups="TypeIdentifier"/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='ModuleDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "module" <EBNFC name='ModuleIdentifier'/> [ "{" [ <EBNFC name='ClausedScopeForModulesSet'/> ] [ <EBNFC name='ModuleContent'/> ] [ <EBNFC name='ClausedScopeForModulesSet'/> ] "}" ] 
           [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='ModuleDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ModuleDecl'/> .
<EBNFCDECL name='ClausedScopeForModulesSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForModulesSet'/> .
<EBNFCDECL name='ClausedScopeForModulesSet'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForModule'/> .
<EBNFCDECL name='ClausedScopeForModule'/> = <TEBNFC name='DefScope' param = 'ModuleContent'/> .
<EBNFCDECL name='ModuleContent'/> = <EBNFC name='SourceCodeFileContent'/> .
</gr>

<h3 class='center-h' data-href="Application_chapter">
    Application
</h3>

<LinkToContent/>

<h4 class='center-h' data-href="Application_declaration_chapter">
    Declaration
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='ApplicationDeclsSet' groups="SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'ApplicationDecl'/> .
<EBNFCDECL name='ApplicationIdentifier' groups="TypeIdentifier"/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='ApplicationDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "app" <EBNFC name='ApplicationIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] 
           [ "{" { <br/> <GEBNFC name='ApplicationMembers' kind='op_and'/> <br/>
		   <GEBNFC name='ObjectMembers' kind='op_and'/> <br/>		   
		   <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/>
            "}" ] 
           [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='ApplicationDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ApplicationDecl'/> .
<EBNFCDECL name='ClausedScopeForApplicationsSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForApplicationsSet'/> .
<EBNFCDECL name='ClausedScopeForApplicationsSet' groups='ApplicationMembers'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForApplication'/> .
<EBNFCDECL name='ClausedScopeForApplication'/> = <TEBNFC name='DefScope_2' param = "{ <br/> <GEBNFC name='ApplicationMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> }"/> .
</gr>

<h4 class='center-h' data-href="Import_chapter">
    Import
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='Import' groups='ApplicationMembers'/> = "import" ":" [{ <EBNFC name='ImportItem'/> }] ";" .
<EBNFCDECL name='ImportDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'Import'/> .
<EBNFCDECL name='ImportItem'/> = [ <EBNFC name='AnnotationsList'/> ] <EBNFC name='ConceptIdentifier'/> .
</gr>

<h3 class='center-h' data-href="State_chapter">
    State
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='StateDeclsSet' groups="ObjectTypeDecls;SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'StateDecl'/> .
<EBNFCDECL name='StateIdentifier' groups="TypeIdentifier"/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='StateDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "state" <EBNFC name='GenericParametersDecl'/> <EBNFC name='StateIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] 
         [ "{" { <br/> <GEBNFC name='StateMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] 
		 [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='StateDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'StateDecl'/> .
<EBNFCDECL name='ClausedScopeForStatesSetExpr' groups="ClausedScopeForStatesSetExpr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForStatesSet'/> .
<EBNFCDECL name='ClausedScopeForStatesSet' groups='StateMembers'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForState'/> .
<EBNFCDECL name='ClausedScopeForState'/> = <TEBNFC name='DefScope_2' param = "{ <br/> <GEBNFC name='StateMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> }"/> .
</gr>

<h3 class='center-h' data-href="Process_chapter">
    Process
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ProcessDeclsSet' groups="ObjectTypeDecls;SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'ProcessDecl'/> .
<EBNFCDECL name='ProcessIdentifier' groups="TypeIdentifier"/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='ProcessDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "process" <EBNFC name='GenericParametersDecl'/> <EBNFC name='ProcessIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] 
         [ "{" { <br/> <GEBNFC name='ProcessMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] 
         [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='ProcessDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ProcessDecl'/> .
<EBNFCDECL name='ClausedScopeForProcessesSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForProcessesSet'/> .
<EBNFCDECL name='ClausedScopeForProcessesSet' groups='ProcessMembers'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForProcess'/> .
<EBNFCDECL name='ClausedScopeForProcess'/> = <TEBNFC name='DefScope_2' param = "{ <br/> <GEBNFC name='ProcessMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> }"/> .
</gr>

<h3 class='center-h' data-href="Supervisor_chapter">
    Supervisor
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='SupervisorDeclsSet' groups="ObjectTypeDecls;SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'SupervisorDecl'/> .
<EBNFCDECL name='SupervisorIdentifier' groups="TypeIdentifier"/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='SupervisorDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "supervisor" <EBNFC name='SupervisorIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] 
           [ "{" { <br/> <GEBNFC name='SupervisorMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] 
           [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='SupervisorDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'SupervisorDecl'/> .
<EBNFCDECL name='ClausedScopeForSupervisorsSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForSupervisorsSet'/> .
<EBNFCDECL name='ClausedScopeForSupervisorsSet' groups='SupervisorMembers'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForSupervisor'/> .
<EBNFCDECL name='ClausedScopeForSupervisor'/> = <TEBNFC name='DefScope_2' param = "{ <br/> <GEBNFC name='SupervisorMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> }"/> .
</gr>

<h3 class='center-h' data-href="Function_chapter">
    Function
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='FunctionDeclsSet' groups="SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'FunctionDecl'/> .
<EBNFCDECL name='FunctionName' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='FunctionSignature' groups='TypeIdentifier'/> = "(" <EBNFC name='FunctionParamsDeclaration'/> ")" [ "(|" <EBNFC name='FunctionAdditionalParamsSetDeclaration'/> "|)" ] ":" <EBNFC name='FunctionReturnDeclaration'/> .
<EBNFCDECL name='FunctionDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "func" <EBNFC name='GenericParametersDecl'/> <EBNFC name='FunctionName'/> <EBNFC name='FunctionSignature'/> [ <EBNFC name='InheritanceDecl'/> ]
           [ "{" { <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] <br/>
		   "=>" "{" [ <EBNFC name='StatementsSet'/> ] "}" ] [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='FunctionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'FunctionDecl' /> .
<EBNFCDECL name='AnonymousFunction'/> = [ <EBNFC name='AnnotationsList'/> ] [ "func" ] <EBNFC name='GenericParametersDecl'/> <EBNFC name='FunctionSignature'/> [ "is" <EBNFC name='InheritanceDecl'/> ]
           [ "{" { <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] <br/>
		   "=>" "{" [ <EBNFC name='StatementsSet'/> ] "}" ] [ <EBNFC name='ModalitiesSet'/> ] ";" . 
<EBNFCDECL name='AnonymousFunctionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AnonymousFunction' /> .
<EBNFCDECL name='FunctionParamsSetDeclaration'/> = <EBNFC name='FunctionParamDeclaration'/> [{ "," <EBNFC name='FunctionParamDeclaration'/> }] .
<EBNFCDECL name='FunctionParamDeclaration'/> = <TEBNFC name='VariableExpr'/> .
<EBNFCDECL name='FunctionAdditionalParamsSetDeclaration'/> = <EBNFC name='FunctionAdditionalParamDeclaration'/> [{ "," <EBNFC name='FunctionAdditionalParamDeclaration'/> }] .
<EBNFCDECL name='FunctionAdditionalParamDeclaration'/> .
<EBNFCDECL name='FunctionReturnDeclaration'/> = <EBNFC name='TypeIdentifier'/> .
</gr>

<h3 class='center-h' data-href="OpOverloading_chapter">
    Operator overloading
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='OpOverloadingDeclsSet' groups="SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'OpOverloadingDecl'/> .
<EBNFCDECL name='OpOverloadingDecl'/> .
<EBNFCDECL name='OpOverloadingDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'OpOverloadingDecl'/> .
</gr>

<h3 class='center-h' data-href="Fact_and_logical_rule_chapter">
    Fact and logical rule
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='FactDeclsSet' groups="SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'FactDecl'/> .
<EBNFCDECL name='LogicalRuleDeclsSet' groups="SourceCodeFileContent"/> = <EBNFC name='LogicalRuleDecl'/> [{ <EBNFC name='LogicalRuleDecl'/> }] .
<EBNFCDECL name='FactIdentifier' groups="TypeIdentifier"/> = <EBNFC name='InstanceIdentifier'/> | <EBNFC name='instance_identifier_with_namespace'/> .
<EBNFCDECL name='FactDecl'/> .
<EBNFCDECL name='FactDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'FactDeclsSet'/> .
<EBNFCDECL name='ClausedScopeForFactsSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForFactsSet'/> .
<EBNFCDECL name='ClausedScopeForFactsSet'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForFact'/> .
<EBNFCDECL name='ClausedScopeForFact'/> = <!--<TEBNFC name='DefScope' param = ''/>--> .
<EBNFCDECL name='LogicalRuleIdentifier' groups="TypeIdentifier"/> = <EBNFC name='InstanceIdentifier'/> | <EBNFC name='instance_identifier_with_namespace'/> .
<EBNFCDECL name='LogicalRuleDecl'/> .
<EBNFCDECL name='LogicalRuleDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'LogicalRuleDeclsSet'/> .
<EBNFCDECL name='ClausedScopeForLogicalRulesSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForLogicalRulesSet'/> .
<EBNFCDECL name='ClausedScopeForLogicalRulesSet'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForLogicalRule'/> .
<EBNFCDECL name='ClausedScopeForLogicalRule'/> = <!--<TEBNFC name='DefScope' param = ''/>--> .
<EBNFCDECL name='ImplicationSymbol'/> = "->" | "<-" | "<->" | "→" | "←" | "↔" .
<EBNFCDECL name='LogicalSentence'/> .
<EBNFCDECL name='LogicalSentenceVal'/> = <EBNFC name='FactDecl'/> | <EBNFC name='LogicalSentence'/> | <EBNFC name='ConceptIdentifier'/> | <EBNFC name='InstanceIdentifier'/> .
</gr>

<pre class='tmp_tchn' title='It is just tech remark for creating this spec!'>
!((name=helen|name=ann)&class=girl)
son(Piter,$X1)
male(#Bob)
know(?X,?Y)
entityConditionVarName = "#@R";
{: #acc2339e-df14-4df4-a004-c33a81622d99 $:{#simple_module} {son(#Piter,#Tom)} :}
{: #69d2698e-a6dc-4c76-8049-4a8a157e4fa1 $:{#simple_module} {son(@X,@Y)} <-> {parent(@Y,@X) & male(@X)} :}
$$:{ ClassName } - the fact belong to ClassName
(: #@R : NameOfFact :) - section of entity condition names.
{: #43e60d98-c2e2-4186-b480-6602c09c6fa4(&exist;@X) {state(@X)} :}
{: #e07d7c38-3dc6-4509-9bfd-435c6ef7b929 {determiner(dog,the)} :}
{: #1b898010-f9b7-4b76-a4ea-5585f367af13(:#@R:#e07d7c38-3dc6-4509-9bfd-435c6ef7b929:) {know(I,#@R)} :}
{: #1b898010-f9b7-4b76-a4ea-5585f367af13(:#@R:#e07d7c38-3dc6-4509-9bfd-435c6ef7b929:) {know(I,#@R)[:{: #43e60d98-c2e2-4186-b480-6602c09c6fa4(&exist;@X) {state(@X)} :}:]} :}
{: #5f145455-246f-4006-840d-9a0d009a44fe $:{#simple_module} {?Z(?X,?Y)} :}
</pre>

<h3 class='center-h' data-href="Event_chapter">
Event
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='EventDeclsSet' groups="ObjectTypeDecls;SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'EventDecl'/> .
<EBNFCDECL name='EventDecl'/> .
<EBNFCDECL name='EventDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'EventDeclsSet'/> .
</gr>

<h3 class='center-h' data-href="Trigger_chapter">
    Trigger
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='TriggerDeclsSet' groups="ObjectTypeDecls"/> = <TEBNFC name='DeclSet' param = 'TriggerDecl'/> .
<EBNFCDECL name='TriggerName'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='TriggerIdentifier' groups="TypeIdentifier"/> = <EBNFC name='TriggerName'/> .
<EBNFCDECL name='TriggerDecl'/> = [ <EBNFC name='AnnotationsList'/> ] (( "trigger" <EBNFC name='TriggerName'/> [ <EBNFC name='InheritanceDecl'/> ] 
                  "{" [ [ <EBNFC name='ClausedScopeForTriggersSet'/> ] <EBNFC name='TriggersContent'/> ] [ <EBNFC name='ClausedScopeForTriggersSet'/> ] "}" ) | <EBNFC name='TriggersContent'/> ) 
                  [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='TriggerDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'TriggerDeclsSet'/> .
<EBNFCDECL name='ClausedScopeForTriggersSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForTriggersSet'/> .
<EBNFCDECL name='ClausedScopeForTriggersSet'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForTrigger'/> .
<EBNFCDECL name='ClausedScopeForTrigger'/> = <TEBNFC name='DefScope' param = 'TriggersContent'/> .
<EBNFCDECL name='TriggersContent'/> = ( "on" <EBNFC name='TriggerOnExpression'/> "do" "{" <EBNFC name='StatementsSet'/> "}" ) | 
                  ( "on" <EBNFC name='TriggerOnExpression'/> "except" <EBNFC name='TriggerExceptExpression'/> "do" "{" <EBNFC name='StatementsSet'/> "}" ) | 
                  ( "on" <EBNFC name='TriggerOnExpression'/> "{" <EBNFC name='TriggersContent'/> "}" ) .
<EBNFCDECL name='TriggerOnExpression'/> .
<EBNFCDECL name='TriggerExceptExpression'/> .
</gr>

<h3 class='center-h' data-href="Instance_chapter">
    Instance
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='InstanceDeclsSet' groups='ObjectTypeDecls;SourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'InstanceDecl'/> .
<EBNFCDECL name='InstanceIdentifier' groups="TypeIdentifier"/> = <EBNFC name='InstanceIdentifier'/> | <EBNFC name='instance_identifier_with_namespace'/> .
<EBNFCDECL name='InstanceDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "inst" <EBNFC name='InstanceIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] 
                [ "{" { <br/> <GEBNFC name='InstanceMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ]
                [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='InstanceDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'InstanceDeclsSet'/> .
<EBNFCDECL name='ClausedScopeForInstancesSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForInstancesSet'/> .
<EBNFCDECL name='ClausedScopeForInstancesSet' groups='InstanceMembers'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForInstance'/> .
<EBNFCDECL name='ClausedScopeForInstance'/> = <TEBNFC name='DefScope_2' param = "{ <br/> <GEBNFC name='InstanceMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> }"/> .
</gr>

<h3 class='center-h' data-href='Conditional_entity_chapter'>
Conditional entity
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ConditionalEntityDeclsSet' groups=ObjectTypeDecls;SourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'ConditionalEntityDecl'/> .
<EBNFCDECL name='ConditionalEntityDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'ConditionalEntityDeclsSet'/> .
<EBNFCDECL name='ConditionalEntityDecl'/> = .
</gr>

<h3 class='center-h' data-href="Call-block_chapter">
    Call-block
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='CallBlocksSet' groups="SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'CallBlock'/> .
<EBNFCDECL name='CallBlock'/> .
</gr>

<h3 class='center-h' data-href="Synonym_chapter">
Synonym
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='SynonymDeclsSet' groups="ObjectTypeDecls;SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'SynonymDecl'/> .
<EBNFCDECL name='SynonymDecl'/> .
<EBNFCDECL name='SynonymDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'SynonymDeclsSet'/> .
</gr>

<h3 class='center-h' data-href='Union_type_chapter'>
Union type
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='UnionTypeDecl' groups='TypeIdentifier'/> = <EBNFC name='TypeIdentifier'/> "|" <EBNFC name='TypeIdentifier'/> [{ "|" <EBNFC name='TypeIdentifier'/> }] .
</gr>

<h3 class='center-h' data-href='Intersection_type_chapter'>
Intersection type
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='IntersectionTypeDecl' groups='TypeIdentifier'/> = <EBNFC name='TypeIdentifier'/> "&" <EBNFC name='TypeIdentifier'/> [{ "&" <EBNFC name='TypeIdentifier'/> }] .
</gr>

<h3 class='center-h' data-href="Type_alias_chapter">
    Type alias
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='TypeAliasesSet' groups="ObjectTypeDecls"/> = <TEBNFC name='DeclSet' param = 'TypeAlias'/> .
<EBNFCDECL name='TypeAliasIdentifier' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='TypeAlias'/> = [ <EBNFC name='AnnotationsList'/> ] "type" <EBNFC name='TypeAliasIdentifier'/> "=" <EBNFC name='TypeIdentifier'/> .
<EBNFCDECL name='TypeAliasDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'TypeAliasesSet'/> .
</gr>
	
<h3 class='center-h' data-href="Ordered_type_chapter">
    Ordered type
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='OrderedTypeDecl'/> = <GEBNFC name='OrderedTypeDecl' kind='or'/> .
<EBNFCDECL name='OrderedTypeIdentifier'/> = <EBNFC name='RangeIdentifier'/> | <EBNFC name='BooleanTypeIdentifier'/> | <EBNFC name='NumericTypeIdentifier'/> | <EBNFC name='StringTypeIdentifier'/> .
</gr>
	
<h3 class='center-h' data-href="Range_chapter">
    Range
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='RangeDeclsSet' groups="ObjectTypeDecls;SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'RangeDecl'/> . 
<EBNFCDECL name='RangeIdentifier' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='RangeDecl' groups="OrderedTypeDecl"/> = [ <EBNFC name='AnnotationsList'/> ] "range" <EBNFC name='GenericParametersDecl'/> <EBNFC name='RangeIdentifier'/> "of" <EBNFC name='OrderedTypeIdentifier'/> <EBNFC name='RangeDescDecl'/> [ <EBNFC name='DimDecl'/> ]
              [ <EBNFC name='InheritanceDecl'/> ] 
			  [ "{" { <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] 
			  [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='RangeDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'RangeDeclsSet'/> .
<EBNFCDECL name='DimDecl'/> = "dim" <EBNFC name='TypeIdentifier'/> .
<EBNFCDECL name='RangeDescDecl'/> = <EBNFC name='OrderedTypeLiteral'/> ".." <EBNFC name='OrderedTypeLiteral'/> .
</gr> 

<h3 class='center-h' data-href="Value_chapter">
    Value
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ValueDeclsSet' groups='ObjectTypeDecls;SourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'ValueDecl'/> .
<EBNFCDECL name='ValueIdentifier' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='ValueDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "value" <EBNFC name='GenericParametersDecl'/> <EBNFC name='ValueIdentifier'/> "of" <EBNFC name='OrderedTypeIdentifier'/> [ <EBNFC name='DimDecl'/> ]
              [ <EBNFC name='InheritanceDecl'/> ] 
			  [ "{" { <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}" ] 
			  [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='ValueDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'ValueDeclsSet'/> .
</gr>

<h3 class='center-h' data-href='Set_chapter'>
Set
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='SetDeclsSet' groups='ObjectTypeDecls;SourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'SetDecl'/> .
<EBNFCDECL name='SetIdentifier' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='SetTypeIdentifier' groups='TypeIdentifier'/> = "set" [ "of" <EBNFC name='TypeIdentifier'/> [ <EBNFC name='DimDecl'/> ] ] .
<EBNFCDECL name='SetDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'SetDeclsSet'/> .
<EBNFCDECL name='SetDecl'/> = .
</gr>

<h3 class='center-h' data-href='List_chapter'>
List
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ListDeclsSet' groups='ObjectTypeDecls;SourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'ListDecl'/> .
<EBNFCDECL name='ListIdentifier' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='ListTypeIdentifier' groups='TypeIdentifier'/> = "list" [ "of" <EBNFC name='TypeIdentifier'/> [ <EBNFC name='DimDecl'/> ] ] .
<EBNFCDECL name='ListDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'ListDeclsSet'/> .
<EBNFCDECL name='ListDecl'/> = .
</gr>

<h3 class='center-h' data-href='Queue_chapter'>
Queue
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='QueueDeclsSet' groups='ObjectTypeDecls;SourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'QueueDecl'/> .
<EBNFCDECL name='QueueIdentifier' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='QueueTypeIdentifier' groups='TypeIdentifier'/> = "queue" [ "of" <EBNFC name='TypeIdentifier'/> [ <EBNFC name='DimDecl'/> ] ] .
<EBNFCDECL name='QueueDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'QueueDeclsSet'/> .
<EBNFCDECL name='QueueDecl'/> = .
</gr>

<h3 class='center-h' data-href='Stack_chapter'>
Stack
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='StackDeclsSet' groups='ObjectTypeDecls;SourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'StackDecl'/> .
<EBNFCDECL name='StackIdentifier' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='StackTypeIdentifier' groups='TypeIdentifier'/> = "stack" [ "of" <EBNFC name='TypeIdentifier'/> [ <EBNFC name='DimDecl'/> ] ] .
<EBNFCDECL name='StackDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'StackDeclsSet'/> .
<EBNFCDECL name='StackDecl'/> = .
</gr>

<h3 class='center-h' data-href='Map_chapter'>
Map
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='MapDeclsSet' groups='ObjectTypeDecls;SourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'MapDecl'/> .
<EBNFCDECL name='MapIdentifier' groups='TypeIdentifier'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='MapTypeIdentifier' groups='TypeIdentifier'/> = "map" [ "of" <EBNFC name='TypeIdentifier'/> [ <EBNFC name='DimDecl'/> ] ] .
<EBNFCDECL name='MapDeclExpr' groups='Expr'/> = <TEBNFC name='NonExprAsExprVal' param = 'MapDeclsSet'/> .
<EBNFCDECL name='MapDecl'/> = .
</gr>

<h3 class='center-h' data-href="Fuzzy_set_chapter">
    Fuzzy set
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='FuzzySetDeclsSet' groups="ObjectTypeDecls;SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'FuzzySetDecl'/> .
<EBNFCDECL name='FuzzySetName'/> = <EBNFC name='ConceptIdentifier'/> | <EBNFC name='identifier_with_namespace'/> .
<EBNFCDECL name='FuzzySetIdentifier' groups="TypeIdentifier"/> = <EBNFC name='FuzzySetName'/> .
<EBNFCDECL name='FuzzySetDecl'/> = [ <EBNFC name='AnnotationsList'/> ] "fuzzy" "set" <EBNFC name='GenericParametersDecl'/> <EBNFC name='FuzzySetName'/> "of" <EBNFC name='RangeIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ]
            "{" { <br/> <GEBNFC name='FuzzySetMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> } <br/> "}"
			[ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='FuzzySetDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'FuzzySetDeclsSet'/> .
<EBNFCDECL name='ClausedScopeForFuzzySetsSetExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForFuzzySetsSet'/>
<EBNFCDECL name='ClausedScopeForFuzzySetsSet' groups='FuzzySetMembers'/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForFuzzySet'/> .
<EBNFCDECL name='ClausedScopeForFuzzySet'/> = <TEBNFC name='DefScope_2' param = "{ <br/> <GEBNFC name='FuzzySetMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectMembers' kind='op_and'/> <br/> <GEBNFC name='ObjectTypeDecls' kind='op_and'/> }"/> .			
<EBNFCDECL name='FuzzyTermName'/> = <EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='FuzzyOperatorName'/> = <EBNFC name='ConceptIdentifier'/> .
<EBNFCDECL name='FuzzyTermsBlock' groups='FuzzySetMembers'/> = "terms" ":" <EBNFC name='newline'/> <EBNFC name='FuzzyTerm'/> [{ <EBNFC name='FuzzyTerm'/> }] .
<EBNFCDECL name='FuzzyTermsBlocksDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'FuzzyTermsBlocks'/> .
<EBNFCDECL name='FuzzyTerm'/> = [ <EBNFC name='AnnotationsList'/> ] <EBNFC name='FuzzyTermName'/> "=" <EBNFC name='AnonymousFunction'/> [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='FuzzyOperatorsBlock' groups='FuzzySetMembers'/> = "operators" ":" <EBNFC name='newline'/> <EBNFC name='FuzzyOperator'/> [{ <EBNFC name='FuzzyOperator'/> }] .
<EBNFCDECL name='FuzzyOperatorsBlockDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'FuzzyOperatorsBlock'/> .
<EBNFCDECL name='FuzzyOperator'/> = [ <EBNFC name='AnnotationsList'/> ] <EBNFC name='FuzzyOperatorName'/> "=" <EBNFC name='AnonymousFunction'/> [ <EBNFC name='ModalitiesSet'/> ] ";" . 
<EBNFCDECL name='FuzzyExpr' groups="Expr"/> .
</gr>

<pre class='tmp_tchn' title='It is just tech remark for creating this spec!'>
Fuzzy sets - Linguistic variables
Fuzzy term - Linguistic value

Defuzzification method is not defined yet!
</pre>

<h3 class='center-h' data-href="Boolean_type_chapter">
    Boolean type
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='BooleanTypeIdentifier' groups="TypeIdentifier"/> = "boolean" | "Boolean" | "bool" .
<EBNFCDECL name='BooleanTypeExpr' groups="Expr"/> = <EBNFC name='FuzzyExpr'/> | <EBNFC name='BooleanLiteral'/> | <EBNFC name='NullTypeExpr'/> | <EBNFC name='BooleanTypeExpr'/> .
</gr>
	
<h3 class='center-h' data-href="Numeric_type_chapter">
    Numeric type
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='NumericTypeIdentifier' groups="TypeIdentifier"/> = "number" | "Number" | "num" .
<EBNFCDECL name='NumericTypeExpr' groups="Expr"/> = <EBNFC name='NumberLiteral'/> | <EBNFC name='NullTypeExpr'/> | <EBNFC name='NumericTypeExpr'/> .
</gr>
	
<h3 class='center-h' data-href="String_type_chapter">
    String type
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='StringTypeIdentifier' groups="TypeIdentifier"/> = "string" | "String" | "str" .
<EBNFCDECL name='StringTypeExpr' groups="Expr"/> = <EBNFC name='StringLiteral'/> | <EBNFC name='NullTypeExpr'/> | <EBNFC name='StringTypeExpr'/> .
</gr>

<h3 class='center-h' data-href="Date_and_time_type_chapter">
    Date and time type
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='DateTimeIdentifier' groups="TypeIdentifier"/> = "date" | "time" | "datetime" .
<EBNFCDECL name='DateTimeTypeExpr' groups="Expr"/> = <EBNFC name='DateTimeLiteral'/> | <EBNFC name='NullTypeExpr'/> | <EBNFC name='DateTimeTypeExpr'/> .
</gr>

<h3 class='center-h' data-href="Null_type_chapter">
    Null type
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='NullTypeIdentifier'/> = <EBNFC name='NullLiteral'/> .
<EBNFCDECL name='NullTypeExpr' groups="Expr"/> = <EBNFC name='NullLiteral'/> | <EBNFC name='NullTypeExpr'/> | <EBNFC name='NullTypeExpr'/> .
</gr>

<h2 class='center-h' data-href="Modalities_chapter">
    Modalities
</h2>

<LinkToContent/>

<gr>
<EBNFCDECL name='ModalitiesSet'/> = <EBNFC name='Modality'/> [{ <EBNFC name='Modality'/> }] .
<EBNFCDECL name='Modality'/> = <GEBNFC name='Modality' kind='or' /> .
</gr>

<h3 class='center-h' data-href="Certainty_factor_chapter">
    Certainty factor
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='CertaintyFactorModality' groups="Modality"/> = <EBNFC name='CertaintyFactorModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='CertaintyFactorModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'CertaintyFactorModality'/> .
<EBNFCDECL name='CertaintyFactorModalityMark'/> = "%:" | "cf" | "certain" | "sure" | "right" | "true" | "cf:" | "certain:" | "sure:" | "right:" | "true:" .
<EBNFCDECL name='AdditionalCertaintyFactorModality' groups="Modality"/> = <EBNFC name='AdditionalCertaintyFactorModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalCertaintyFactorModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalCertaintyFactorModality'/> .
<EBNFCDECL name='AdditionalCertaintyFactorModalityMark'/> = "[%:]" | "[cf]" | "[certain]" | "[sure]" | "[right]" | "[true]" | "[cf:]" | "[certain:]" | "[sure:]" | "[right:]" | "[true:]" .
<EBNFCDECL name='BooleanValOfModality'/> = <TEBNFC name='ModalitiesExprVal' param = 'BooleanTypeExpr'/> .
</gr>

<h3 class='center-h' data-href="Time_modality_chapter">
    Time modality
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='TimeModality' groups="Modality"/> = <EBNFC name='TimeModalityMark'/> <EBNFC name='DateTimeValOfModality'/> .
<EBNFCDECL name='TimeModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'TimeModality'/> .
<EBNFCDECL name='TimeModalityMark'/> = "-:" | "time" | "when" | "t" | "time:" | "when:" | "t:" .
<EBNFCDECL name='AdditionalTimeModality' groups="Modality"/> = <EBNFC name='AdditionalTimeModalityMark'/> <EBNFC name='DateTimeValOfModality'/> .
<EBNFCDECL name='AdditionalTimeModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalTimeModality'/> .
<EBNFCDECL name='AdditionalTimeModalityMark'/> = "[-:]" | "[time]" | "[when]" | "[t]" | "[time:]" | "[when:]" | "[t:]" .
<EBNFCDECL name='DateTimeValOfModality'/> = <TEBNFC name='ModalitiesExprVal' param = 'DateTimeTypeExpr'/> .
</gr>

<h3 class='center-h' data-href="Completion_modality_chapter">
    Completion modality
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='CompletionModality' groups="Modality"/> = <EBNFC name='CompletionModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='CompletionModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'CompletionModality'/> .
<EBNFCDECL name='CompletionModalityMark'/> = "|:" | "final" | "completed" | "completion" | "finished" | "finalized" | "fin" | "final:" | "completed:" | "completion:" | "finished:" | "finalized:" | "fin:" .
<EBNFCDECL name='AdditionalCompletionModality' groups="Modality"/> = <EBNFC name='AdditionalCompletionModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalCompletionModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalCompletionModality'/> .
<EBNFCDECL name='AdditionalCompletionModalityMark'/> = "[|:]" | "[final]" | "[completed]" | "[completion]" | "[finished]" | "[finalized]" | "[fin]" | "[final:]" | "[completed:]" | "[completion:]" | "[finished:]" | "[finalized:]" | "[fin:]" .
</gr>

<h3 class='center-h' data-href="Accepted_modality_chapter">
    Accepted modality
</h3>

<LinkToContent/>	

<gr>
<EBNFCDECL name='AcceptedModality' groups="Modality"/> = <EBNFC name='AcceptedModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AcceptedModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AcceptedModality'/> .
<EBNFCDECL name='AcceptedModalityMark'/> = "+:" | "accepted" | "accept" | "a" | "accepted:" | "accept:" | "a:" .
<EBNFCDECL name='AdditionalAcceptedModality' groups="Modality"/> = <EBNFC name='AdditionalAcceptedModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalAcceptedModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalAcceptedModality'/> .
<EBNFCDECL name='AdditionalAcceptedModalityMark'/> = "[+:]" | "[accepted]" | "[accept]" | "[a]" | "[accepted:]" | "[accept:]" | "[a:]" .
</gr>

<h3 class='center-h' data-href="Desirable_modality_chapter">
    Desirable modality
</h3>

<LinkToContent/>	

<gr>
<EBNFCDECL name='DesirableModality' groups="Modality"/> = <EBNFC name='DesirableModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='DesirableModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'DesirableModality'/> . 
<EBNFCDECL name='DesirableModalityMark'/> = "~~:" | "desirable" | "optative" | "d" | "desirable:" | "optative:" | "d:" .
<EBNFCDECL name='AdditionalDesirableModality' groups="Modality"/> = <EBNFC name='AdditionalDesirableModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalDesirableModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalDesirableModality'/> .
<EBNFCDECL name='AdditionalDesirableModalityMark'/> = "[~~:]" | "[desirable]" | "[optative]" | "[d]" | "[desirable:]" | "[optative:]" | "[d:]" .
</gr>

<h3 class='center-h' data-href="Necessity_modality_chapter">
    Necessity modality
</h3>

<LinkToContent/>	

<gr>
<EBNFCDECL name='NecessityModality' groups="Modality"/> = <EBNFC name='NecessityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='NecessityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'NecessityModality'/> .
<EBNFCDECL name='NecessityModalityMark'/> = "~!:" | "necessity" | "need" | "must" | "should" | "ought" | "obligation" | "oblige" | "n" | "necessity:" | "need:" | "must:" | "should:" | "ought:" | "obligation:" | "oblige:" | "n:" .
<EBNFCDECL name='AdditionalNecessityModality' groups="Modality"/> = <EBNFC name='AdditionalNecessityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalNecessityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalNecessityModality'/> .
<EBNFCDECL name='AdditionalNecessityModalityMark'/> = "[~!:]" | "[necessity]" | "[need]" | "[must]" | "[should]" | "[ought]" | "[obligation]" | "[oblige]" | "[n]" | "[necessity:]" | "[need:]" | "[must:]" | "[should:]" | "[ought:]" | "[obligation:]" | "[oblige:]" | "[n:]" .
</gr>

<h3 class='center-h' data-href="Intention_modality_chapter">
    Intention modality
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='IntentionModality' groups="Modality"/> = <EBNFC name='IntentionModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='IntentionModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'IntentionModality'/> .
<EBNFCDECL name='IntentionModalityMark'/> = "~>:" | "intention" | "intend" | "plan" | "decide" | "i" | "intention:" | "intend:" | "plan:" | "decide:" | "i:" .
<EBNFCDECL name='AdditionalIntentionModality' groups="Modality"/> = <EBNFC name='AdditionalIntentionModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalIntentionModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalIntentionModality'/> .
<EBNFCDECL name='AdditionalIntentionModalityMark'/> = "[~>:]" | "[intention]" | "[intend]" | "[plan]" | "[decide]" | "[i]" | "[intention:]" | "[intend:]" | "[plan:]" | "[decide:]" | "[i:]" .
</pre>

<h3 class='center-h' data-href="Priority_modality_chapter">
    Priority modality
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='PriorityModality' groups="Modality"/> = <EBNFC name='PriorityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='PriorityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'PriorityModality'/> .
<EBNFCDECL name='PriorityModalityMark'/> = "*:" | "priority" | "p" | "priority:" | "p:" .
<EBNFCDECL name='AdditionalPriorityModality' groups="Modality"/> = <EBNFC name='AdditionalPriorityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalPriorityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalPriorityModality'/> . 
<EBNFCDECL name='AdditionalPriorityModalityMark'/> = "[*:]" | "[priority]" | "[p]" | "[priority:]" | "[p:]" .
</pre>

<h3 class='center-h' data-href="Moral_quality_modality_chapter">
    Moral quality modality
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='MoralQualityModality' groups="Modality"/> = <EBNFC name='MoralQualityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='MoralQualityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'MoralQualityModality'/> .
<EBNFCDECL name='MoralQualityModalityMark'/> = "/^:" | "moral" | "moral:" .
<EBNFCDECL name='AdditionalMoralQualityModality' groups="Modality"/> = <EBNFC name='AdditionalMoralQualityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalMoralQualityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalMoralQualityModality'/> .
<EBNFCDECL name='AdditionalMoralQualityModalityMark'/> = "[/^:]" | "[moral]" | "[moral:]" .
</pre>

<h3 class='center-h' data-href="Respect_modality_chapter">
    Respect modality
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='RespectModality' groups="Modality"/> = <EBNFC name='RespectModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='RespectModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'RespectModality'/> .
<EBNFCDECL name='RespectModalityMark'/> = "/:" | "respect" | "respect:" .
<EBNFCDECL name='AdditionalRespectModality' groups="Modality"/> = <EBNFC name='AdditionalRespectModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalRespectModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalRespectModality'/> .
<EBNFCDECL name='AdditionalRespectModalityMark'/> = "[/:]" | "[respect]" | "[respect:]" .
</pre>

<h3 class='center-h' data-href="Quantity_quality_modality_chapter">
Quantity quality modality
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='QuantityQualityModality' groups="Modality"/> = <EBNFC name='QuantityQualityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='QuantityQualityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'QuantityQualityModality'/> .
<EBNFCDECL name='QuantityQualityModalityMark'/> = "=:" | "q" | "quantity" | "q:" | "quantity:" .
<EBNFCDECL name='AdditionalQuantityQualityModality' groups="Modality"/> = <EBNFC name='AdditionalQuantityQualityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalQuantityQualityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalQuantityQualityModality'/> .
<EBNFCDECL name='AdditionalQuantityQualityModalityMark'/> = "[=:]" | "[q]" | "[quantity]" | "[q:]" | "[quantity:]" .
</pre>

<h3 class='center-h' data-href="Emotion_kind_chapter">
 Emotion kind modality
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='EmotionKindModality' groups="Modality"/> = <EBNFC name='EmotionKindModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='EmotionKindModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'EmotionKindModality'/> .
<EBNFCDECL name='EmotionKindModalityMark'/> = "~:" | "emotion" | "em" | "emotion:" | "em:" .
<EBNFCDECL name='AdditionalEmotionKindModality' groups="Modality"/> = <EBNFC name='AdditionalEmotionKindModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalEmotionKindModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalEmotionKindModality'/> .
<EBNFCDECL name='AdditionalEmotionKindModalityMark'/> = "[~:]" | "[emotion]" | "[em]" | "[emotion:]" | "[em:]" .
</pre>

<h3 class='center-h' data-href="Emotion_intensity_modality_chapter">
Emotion intensity modality
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='EmotionIntensityModality' groups="Modality"/> = <EBNFC name='EmotionIntensityModalityMark'/> <EBNFC name='BooleanValOfModality'/> . 
<EBNFCDECL name='EmotionIntensityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'EmotionIntensityModality'/> .
<EBNFCDECL name='EmotionIntensityModalityMark'/> = "*~:" | "emotion intensity" | "emotion power" | "emi" | "emp" | "emotion intensity:" | "emotion power:" | "emi:" | "emp:" .
<EBNFCDECL name='AdditionalEmotionIntensityModality' groups="Modality"/> = <EBNFC name='AdditionalEmotionIntensityModalityMark'/> <EBNFC name='BooleanValOfModality'/> .
<EBNFCDECL name='AdditionalEmotionIntensityModalityDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalEmotionIntensityModality'/> .
<EBNFCDECL name='AdditionalEmotionIntensityModalityMark'/> = "[*~:]" | "[emotion intensity]" | "[emotion power]" | "[emi]" | "[emp]" | "[emotion intensity:]" | "[emotion power:]" | "[emi:]" | "[emp:]" .
</pre>

<h2 class='center-h' data-href="Sections_similar_to_modalities_chapter">
    Sections similar to modalities
</h2>

<LinkToContent/>

<h3 class='center-h' data-href="Therefore_not_rule_section_chapter">
    Therefore not rule section
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='ThereforeNotRuleSection' groups="Modality"/> = <EBNFC name='ThereforeNotRuleSectionMark'/> <EBNFC name='LogicalSentenceVal'/> .
<EBNFCDECL name='ThereforeNotRuleSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ThereforeNotRuleSection'/> .
<EBNFCDECL name='ThereforeNotRuleSectionMark'/> = "|->:" | "so" | "therefore" | "so:" | "therefore:" .
<EBNFCDECL name='AdditionalThereforeNotRuleSection' groups="Modality"/> = <EBNFC name='AdditionalThereforeNotRuleSectionMark'/> <EBNFC name='LogicalSentenceVal'/> .
<EBNFCDECL name='AdditionalThereforeNotRuleSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalThereforeNotRuleSection'/> .
<EBNFCDECL name='AdditionalThereforeNotRuleSectionMark'/> = "[|->:]" | "[so]" | "[therefore]" | "[so:]" | "[therefore:]" .
<EBNFCDECL name=''/>
</pre>

<h3 class='center-h' data-href="Else_not_rule_section_chapter">
    Else not rule section
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='ElseNotRuleSection' groups="Modality"/> = <EBNFC name='ElseNotRuleSectionMark'/> <EBNFC name='LogicalSentenceVal'/> .
<EBNFCDECL name='ElseNotRuleSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ElseNotRuleSection'/> .
<EBNFCDECL name='ElseNotRuleSectionMark'/> = "|!->:" | "else" | "else:" | "otherwise" | "other" | "otherwise:" | "other:" .
<EBNFCDECL name='AdditionalElseNotRuleSection' groups="Modality"/> = <EBNFC name='AdditionalElseNotRuleSectionMark'/> <EBNFC name='LogicalSentenceVal'/> .
<EBNFCDECL name='AdditionalElseNotRuleSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalElseNotRuleSection'/> .
<EBNFCDECL name='AdditionalElseNotRuleSectionMark'/> = "[|!->:]" | "[else]" | "[else:]" | "[otherwise]" | "[other]" | "[otherwise:]" | "[other:]" .
</pre>

<h3 class='center-h' data-href="Source_section_chapter">
    Source section
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='SourceSection' groups="Modality"/> =  <EBNFC name='SourceSectionMark'/> <EBNFC name='TypeIdentifier'/> .
<EBNFCDECL name='SourceSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'SourceSection'/> .
<EBNFCDECL name='SourceSectionMark'/> = "@:" | "source" | "origin" | "s" | "source:" | "origin:" | "s:" .
<EBNFCDECL name='AdditionalSourceSection' groups="Modality"/> =  <EBNFC name='AdditionalSourceSectionMark'/> <EBNFC name='TypeIdentifier'/> .
<EBNFCDECL name='AdditionalSourceSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalSourceSection'/> .
<EBNFCDECL name='AdditionalSourceSectionMark'/> = "[@:]" | "[source]" | "[origin]" | "[s]" | "[source:]" | "[origin:]" | "[s:]" .
</pre>

<h3 class='center-h' data-href="Channel_section_chapter">
Channel section
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='ChannelSection' groups="Modality"/> =  <EBNFC name='ChannelSection'/> <EBNFC name='TypeIdentifier'/> .
<EBNFCDECL name='ChannelSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ChannelSection'/> .
<EBNFCDECL name='ChannelSectionMark'/> = "@>:" | "channel" | "chan" | "canal" | "cn" | "channel:" | "chan:" | "canal:" | "cn:" .
<EBNFCDECL name='AdditionalChannelSection' groups="Modality"/> =  <EBNFC name='AdditionalChannelSectionMark'/> <EBNFC name='TypeIdentifier'/> .
<EBNFCDECL name='AdditionalChannelSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalChannelSection'/> .
<EBNFCDECL name='AdditionalChannelSectionMark'/> = "[@>:]" | "[channel]" | "[chan]" | "[canal]" | "[cn]" | "[channel:]" | "[chan:]" | "[canal:]" | "[cn:]" .
</pre>

<h3 class='center-h' data-href="Clauses_section_chapter">
    Clauses section
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='ClausesSection' groups="Modality"/> = <EBNFC name='ClausesSectionMark'/> <EBNFC name='LogicalSentenceValOfModality'/> .
<EBNFCDECL name='ClausesSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausesSection'/> .
<EBNFCDECL name='ClausesSectionMark'/> = "&:" | "where" | "w" | "where:" | "w:" .
<EBNFCDECL name='AdditionalClausesSection' groups="Modality"/> = <EBNFC name='AdditionalClausesSectionMark'/> <EBNFC name='LogicalSentenceValOfModality'/> .
<EBNFCDECL name='AdditionalClausesSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalClausesSection'/> .
<EBNFCDECL name='AdditionalClausesSectionMark'/> = "[&:]" | "[where]" | "[w]" | "[where:]" | "[w:]" .
<EBNFCDECL name='LogicalSentenceValOfModality'/> = <TEBNFC name='ModalitiesExprVal' param = 'LogicalSentence'/> .
</pre>

<h3 class='center-h' data-href="No_contradict_section_chapter">
    No contradict section
</h3>

<LinkToContent/>	

<pre class='ebnf-code'>
<EBNFCDECL name='NoContradictSection' groups="Modality"/> = <EBNFC name='NoContradictSectionMark'/> <EBNFC name='LogicalSentenceValOfModality'/> .
<EBNFCDECL name='NoContradictSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'NoContradictSection'/> .
<EBNFCDECL name='NoContradictSectionMark'/> = "^:" .
<EBNFCDECL name='AdditionalNoContradictSection' groups="Modality"/> = <EBNFC name='AdditionalNoContradictSectionMark'/> <EBNFC name='LogicalSentenceValOfModality'/> .
<EBNFCDECL name='AdditionalNoContradictSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalNoContradictSection'/> .
<EBNFCDECL name='AdditionalNoContradictSectionMark'/> = "[^:]" .
</pre>

<h3 class='center-h' data-href="Access_section_chapter">
    Access section
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='AccessSection' groups="Modality"/> = <EBNFC name='AccessSectionMark'/> <EBNFC name='ValOfAccessSection'/> .
<EBNFCDECL name='AccessSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AccessSection'/> .
<EBNFCDECL name='AccessSectionMark'/> = "!!:" | "access" | "permissions" | "allow" | "permit" | "a" | "access:" | "permissions:" | "allow:" | "permit:" | "a:" .
<EBNFCDECL name='AdditionalAccessSection' groups="Modality"/> = <EBNFC name='AdditionalAccessSectionMark'/> <EBNFC name='ValOfAccessSection'/> .
<EBNFCDECL name='AdditionalAccessSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalAccessSection'/> .
<EBNFCDECL name='AdditionalAccessSectionMark'/> = "[!!:]" | "[access]" | "[permissions]" | "[allow]" | "[permit]" | "[a]" | "[access:]" | "[permissions:]" | "[allow:]" | "[permit:]" | "[a:]" .
<EBNFCDECL name='AccessModifierDescription'/> =   ( "published" | ("published" "just" "for" <EBNFC name='AccessModifierPublishJustForCondition'/> ) |
                        "public" | "internal" | "protected" | "private" ) ":" .
<EBNFCDECL name='AccessModifierPublishJustForCondition'/> = <EBNFC name='LogicalSentence'/> .
<EBNFCDECL name='ValOfAccessSection'/> = <TEBNFC name='ModalitiesExprVal' param = 'AccessModifierDescription'/> .
</pre>

<h3 class='center-h' data-href="Reason_section_chapter">
    Reason section
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='ReasonSection'/> = <EBNFC name='ReasonSectionMark'/> <EBNFC name='LogicalSentenceVal'/> .
<EBNFCDECL name='ReasonSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ReasonSection'/> .
<EBNFCDECL name='ReasonSectionMark' groups="Modality"/> = "|-<:" | "reason" | "cause" | "reason:" | "cause:" .
<EBNFCDECL name='AdditionalReasonSection' groups="Modality"/> = <EBNFC name='AdditionalReasonSectionMark'/> <EBNFC name='LogicalSentenceVal'/> .
<EBNFCDECL name='AdditionalReasonSectionDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'AdditionalReasonSection'/> .
<EBNFCDECL name='AdditionalReasonSectionMark'/> = "[|-<:]" | "[reason]" | "[cause]" | "[reason:]" | "[cause:]" .
</pre>

<h3 class='center-h' data-href="Holder_section_chapter">
    Holder section
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='HolderDesc' groups="Modality"/> = <EBNFC name='HolderDescMark'/> <EBNFC name='TypeIdentifier'/> .
<EBNFCDECL name='HolderDescDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'HolderDesc'/> .
<EBNFCDECL name='HolderDescMark'/> = "#:" | "of" | "of:" .
</gr>

<h3 class='center-h' data-href="Module_section_chapter">
    Module section
</h3>

<LinkToContent/>	

<gr>
<EBNFCDECL name='ModuleDesc' groups="Modality"/> = <EBNFC name='ModuleDescMark'/> <EBNFC name='ModuleIdentifier'/> .
<EBNFCDECL name='ModuleDescDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ModuleDesc'/> .
<EBNFCDECL name='ModuleDescMark'/> = "$:" | "module" | "module:" .
</gr>

<h2 class='center-h' data-href="Annotations_chapter">
Annotations
</h2>

<LinkToContent/>

<gr>
<EBNFCDECL name='AnnotationsList'/> = { [ <EBNFC name='LogicalAnnotationsList'/> ] [ <EBNFC name='SystemAnnotationsList'/> ] } .
</gr>

<h3 class='center-h' data-href="System_annotations_chapter">
System annotations
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='SystemAnnotationsList'/> = ( <EBNFC name='SystemAnnotation'/> [{ <EBNFC name='SystemAnnotation'/> }] ) | ( "[<" <EBNFC name='SystemAnnotation'/> [{ "," <EBNFC name='SystemAnnotation'/> }] ">]" ).
<EBNFCDECL name='SystemAnnotation'/> = "[<" <EBNFC name='SystemAnnotationContent'/> ">]" .
<EBNFCDECL name='SystemAnnotationExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'SystemAnnotation'/> .
<EBNFCDECL name='SystemAnnotationContent'/>
</gr>

<h3 class='center-h' data-href="Logical_annotations_chapter">
Logical annotations
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='LogicalSentenceDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'LogicalSentence'/> .
<EBNFCDECL name='LogicalAnnotation'/> = "[:" <EBNFC name='LogicalSentenceVal'/> ":]" .
<EBNFCDECL name='LogicalAnnotationsList'/> = ( <EBNFC name='LogicalAnnotation'/> [{ <EBNFC name='LogicalAnnotation'/> }] ) | ( "[:" <EBNFC name='LogicalAnnotation'/> [{ "," <EBNFC name='LogicalAnnotation'/> }] ":]" ) .
<EBNFCDECL name='LogicalAnnotationDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'LogicalAnnotation'/> .
</gr>

<h2 class='center-h' data-href="Expressions_chapter">
    Expressions
</h2>

<LinkToContent/>

<gr>
<EBNFCDECL name='Expr'/> = <GEBNFC name='Expr' kind='or'/> .
</gr>

<h3 class='center-h' data-href="GroupExpr_chapter">
    Group
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='GroupExpr' groups='Expr'/> = "(" <EBNFC name='Expr'/> ")" .
</gr>

<h3 class='center-h' data-href='Var_chapter'>
Variable
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='VarExpr' groups='Expr'/> = <TEBNFC name='VariableExpr'/> .
</gr>

<h3 class='center-h' data-href="Operators_chapter">
    Operators
</h3>

<LinkToContent/>

<p>
The following table is ordered from highest (_) to lowest (1) precedence.
</p>

<p>
<table style="width: 100%">
    <tr>
	    <th>Precedence</th>
		<th>Operators</th>
		<th>Associativity</th>
		<th>Operator category</th>
    </tr>
</table>


<h3 class='center-h' data-href="Assignment_operators_chapter">
    Assignment operators
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='AssignsOpExpr' groups="Expr"/> = <GEBNFC name='AssignsOpExpr' kind='or'/> .
</gr>

<h4 class='center-h' data-href="AssignmentOp_chapter">
    Operator "="
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='AssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '='/> .
</gr>

<h4 class='center-h' data-href="CoalesceAssignmentOp_chapter">
    Operator "??="
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='CoalesceAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '??='/> .
</gr>

<h4 class='center-h' data-href="AddAssignmentOp_chapter">
    Operator "+="
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='AddAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '+='/> .
</gr>

<h4 class='center-h' data-href="SubAssignmentOp_chapter">
    Operator "-="
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='SubAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '-='/> .
</gr>

<h4 class='center-h' data-href="MulAssignmentOp_chapter">
    Operator "*="
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='MulAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '*='/> .
</gr>

<h4 class='center-h' data-href="DivAssignmentOp_chapter">
    Operator "/="
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='DivAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '/='/> .
</gr>

<h4 class='center-h' data-href="EucDivAssignmentOp_chapter">
    Operator "%="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='EucDivAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '%='/> .
</pre>

<h4 class='center-h' data-href="PowAssignmentOp_chapter">
    Operator "**="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='PowAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '**='/> .
</pre>

<h4 class='center-h' data-href="RootAssignmentOp_chapter">
    Operator "//="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='RootAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '//='/> .
</pre>

<h4 class='center-h' data-href="AddPercentAssignmentOp_chapter">
    Operator "+%="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='AddPercentAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '+%='/> .
</pre>

<h4 class='center-h' data-href="SubPercentAssignmentOp_chapter">
    Operator "-%="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='SubPercentAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '-%='/> .
</pre>

<h4 class='center-h' data-href="MulPercentAssignmentOp_chapter">
    Operator "*%="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='MulPercentAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '*%='/> .
</pre>

<h4 class='center-h' data-href="DivPercentAssignmentOp_chapter">
    Operator "/%="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='DivPercentAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '/%='/> .
</pre>

<h4 class='center-h' data-href="AndAssignmentOp_chapter">
    Operator "&="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='AndAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '&='/> .
</pre>

<h4 class='center-h' data-href="OrAssignmentOp_chapter">
    Operator "|="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='OrAssignmentOpExpr' groups='AssignsOpExpr'/> = <TEBNFC name='BinaryOp' param = '|='/> .
</pre>

<h3 class='center-h' data-href="ArithmeticOp_chapter">
    Arithmetic operators
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='ArithmeticOpExpr' groups="Expr"/> = <GEBNFC name='ArithmeticOpExpr' kind='or'/> .
</pre>

<h4 class='center-h' data-href="AddOp_chapter">
    Operator "+"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='AddOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '+'/> .
</pre>

<h4 class='center-h' data-href="Sub_chapter">
    Operator "-"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='SubOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '-'/> .
</pre>

<h4 class='center-h' data-href="MulOp_chapter">
    Operator "*"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='MulOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '*'/> .
</pre>

<h4 class='center-h' data-href="DivOp_chapter">
    Operator "/"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='DivOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '/'/> .
</pre>

<h4 class='center-h' data-href="EucDivOp_chapter">
    Operator "%"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='EucDivOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '%'/> .
</pre>

<!--https://en.wikipedia.org/wiki/Euclidean_division-->

<h4 class='center-h' data-href="PowOp_chapter">
    Operator "**"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='PowOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '**'/> .
</pre>

<h4 class='center-h' data-href="RootOp_chapter">
    Operator "//"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='RootOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '//'/> .
</pre>

<h4 class='center-h' data-href="AddPercentOp_chapter">
    Operator "+%"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='AddPercentOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '+%'/> .
</pre>

<h4 class='center-h' data-href="SubPercentOp_chapter">
    Operator "-%"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='SubPercentOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '-%'/> .
</pre>

<h4 class='center-h' data-href="MulPercentOp_chapter">
    Operator "*%"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='MulPercentOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '*%'/> .
</pre>

<h4 class='center-h' data-href="DivPercentOp_chapter">
    Operator "/%"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='DivPercentOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='BinaryOp' param = '/%'/> .
</pre>

<h4 class='center-h' data-href="IncrementOp_chapter">
    Operator "++"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='IncrementOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='PostfixUnaryOp' param = '++'/> .
</pre>

<h4 class='center-h' data-href="DecrementOp_chapter">
    Operator "--"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='DecrementOpExpr' groups='ArithmeticOpExpr'/> = <TEBNFC name='PostfixUnaryOp' param = '--'/> .
</pre>

<h3 class='center-h' data-href="RelationalOp_chapter">
    Relational operators
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='RelationalOpExpr' groups="Expr"/> = <GEBNFC name='RelationalOpExpr' kind='or'/> .
</pre>

<h4 class='center-h' data-href="EqualOp_chapter">
    Operator "is"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='EqualOpExpr' groups='RelationalOpExpr'/> = <TEBNFC name='BinaryOp' param = 'is'/> .
</pre>

<h4 class='center-h' data-href="MoreOp_chapter">
    Operator ">"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='MoreOpExpr' groups='RelationalOpExpr'/> = <TEBNFC name='BinaryOp' param = '>'/> .
</pre>

<h4 class='center-h' data-href="LessOp_chapter">
    Operator "<"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='LessOpExpr' groups='RelationalOpExpr'/> = <TEBNFC name='BinaryOp' param = '<'/> .
</pre>

<h4 class='center-h' data-href="MoreOrEqualOp_chapter">
    Operator ">="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='MoreOrEqualOpExpr' groups='RelationalOpExpr'/> = <TEBNFC name='BinaryOp' param = '>='/> .
</pre>

<h4 class='center-h' data-href="LessOrEqualOp_chapter">
    Operator "<="
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='LessOrEqualOpExpr' groups='RelationalOpExpr'/> = <TEBNFC name='BinaryOp' param = '<='/> .
</pre>

<h4 class='center-h' data-href="RangeBooleanOp_chapter">
Range boolean operator
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='RangeBooleanOpExpr' groups='RelationalOpExpr'/> = [ <EBNFC name='AnnotationsList'/> ] ( ">" | ">=" | "<" | "<=" ) <EBNFC name='Expr'/> [ <EBNFC name='AnnotationsList'/> ] ( ">" | ">=" | "<" | "<=" ) <EBNFC name='Expr'/> [ <EBNFC name='AnnotationsList'/> ] ( ">" | ">=" | "<" | "<=" ) .
</gr>

<h3 class='center-h' data-href="LogicalOp_chapter">
    Logical operators
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='LogicalOpExpr' groups="Expr"/> = <GEBNFC name='LogicalOpExpr' kind='or'/> .
</pre>

<h4 class='center-h' data-href="AndOp_chapter">
    Operator "and"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='AndOpExpr' groups='LogicalOpExpr'/> = <TEBNFC name='BinaryOp_2' param = '( "and" | "&" )'/> .
</pre>

<h4 class='center-h' data-href="OrOp_chapter">
    Operator "or"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='OrOpExpr' groups='LogicalOpExpr'/> = <TEBNFC name='BinaryOp_2' param = '( "or" | "|")'/> .
</pre>

<h4 class='center-h' data-href="NotOp_chapter">
    Operator "not"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='NotOpExpr' groups='LogicalOpExpr'/> = <TEBNFC name='UnaryOp_2' param = '( "not" | "!" )'/> .
</pre>

<h4 class='center-h' data-href="InvertVarOp_chapter">
    Operator "!!"
</h4>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='InvertVarOpExpr' groups='LogicalOpExpr'/> = <TEBNFC name='UnaryOp' param = '!!'/> .
</pre>

<h3 class='center-h' data-href="MemberAccessOp_chapter">
    Member access operators
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='MemberAccessOpExpr' groups='Expr'/> = <GEBNFC name='MemberAccessOpExpr' kind='or'/> .
</gr>

<h4 class='center-h' data-href='PointerOp_chapter'>
Operator "."
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='PointerOpExpr' groups='MemberAccessOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='CoalescePointerOp_chapter'>
Operator "?."
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='CoalescePointerOpExpr' groups='MemberAccessOpExpr' /> = .
</gr>

<h3 class='center-h' data-href='CallOp_chapter'>
    Call operator
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='CallingOpExpr' groups='Expr'/> = <GEBNFC name='CallingOpExpr' kind='or'/> .
</gr>

<h4 class='center-h' data-href='CallOp_chapter'>
Operator "()"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='CallOpExpr' groups='CallingOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='CoalesceCallOp_chapter'>
Operator "?()"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='CoalesceCallOpExpr' groups='CallingOpExpr' /> = .
</gr>

<h3 class='center-h' data-href="IndexingOp_chapter">
    Indexing operators
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='IndexingOpExpr' groups="Expr"/> = <GEBNFC name='IndexingOpExpr' kind='or'/> .
</gr>

<h4 class='center-h' data-href='IndexerOp_chapter'>
    Operator "[]"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='IndexerOpExpr' groups='IndexingOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='CoalesceIndexerOp_chapter'>
Operator "?[]"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='CoalesceIndexerOpExpr' groups='IndexingOpExpr' /> = .
</gr>

<h3 class='center-h' data-href="ObjectCreationOp_chapter">
    Object creation operators
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ObjectCreationOpExpr' groups="Expr"/> = <GEBNFC name='ObjectCreationOpExpr' kind='or'/> .
</gr>

<h4 class='center-h' data-href='NewOp_chapter'>
new
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='NewOpExpr' groups='ObjectCreationOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='CloneOp_chapter'>
clone
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='CloneOpExpr' groups='ObjectCreationOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='DeepCloneOp_chapter'>
deep clone
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='DeepCloneOpExpr' groups='ObjectCreationOpExpr' /> = .
</gr>

<h3 class='center-h' data-href="InlineConditionalOp_chapter">
Inline conditional operators
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='InlineConditionalOpExpr' groups="Expr"/> = <GEBNFC name='InlineConditionalOpExpr' kind='or'/> .
</gr>

<pre class='tmp_tchn' title='It is just tech remark for creating this spec!'>
@a is b -> c : d
It will be like C# ternary operator "?:".
Also I am going to create inline switch operator.
</pre>

<h3 class='center-h' data-href="CoalesceOp_chapter">
    Coalesce operator "??"
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='CoalesceOpExpr' groups="Expr"/> = <TEBNFC name='BinaryOp' param = '??'/> .
</gr>

<pre class='tmp_tchn' title='It is just tech remark for creating this spec!'>
It will be like C# operator <a href='https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/operators/null-coalescing-operator'>"??"</a>.
</pre>

<h3 class='center-h' data-href="ReflectionOp_chapter">
Reflection operators
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ReflectionOpExpr' groups='Expr'/> = <GEBNFC name='ReflectionOpExpr' kind='or'/> .
</gr>

<h4 class='center-h' data-href='TypeOfOp_chapter'>
Operator "type of"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='TypeOfOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='ModalOfOp_chapter'>
Operator "modal of"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='ModalOfOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='PublicRunTimeTypeChangesOp_chapter'>
Operator ">>>" "<<<"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='PublicRunTimeTypeChangesOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='SetInheritanceOp_chapter'>
Operator "is" (inheritance)
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='SetInheritanceOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='CastOp_chapter'>
Operator "as"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='CastOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='MakeTypeOp_chapter'>
Operator "make"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='MakeTypeOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='NameAsOp_chapter'>
Operator "name as"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='NameAsOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='DeleteMemberOp_chapter'>
Operator "delm"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='DeleteMemberOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='DeleteSubItemOp_chapter'>
Operator "dels"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='DeleteSubItemOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h4 class='center-h' data-href='DeleteSubItemAndMemberOp_chapter'>
Operator "delsm"
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='DeleteSubItemAndMemberOpExpr' groups='ReflectionOpExpr'/> = .
</gr>

<h3 class='center-h' data-href="DataSetOp_chapter">
    Dataset operators
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='DataSetOpExpr' groups="Expr"/> = <GEBNFC name='DataSetOpExpr' kind='or'/> .
</gr>

<h4 class='center-h' data-href='SelectOp_chapter'>
select
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='SelectOpExpr' groups='DataSetOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='InsertOp_chapter'>
insert
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='InsertOpExpr' groups='DataSetOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='DeleteOp_chapter'>
delete
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='DeleteOpExpr' groups='DataSetOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='MergeOp_chapter'>
merge
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='MergeOpExpr' groups='DataSetOpExpr' /> = .
</gr>

<h4 class='center-h' data-href='UnMergeOp_chapter'>
unmerge
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='UnMergeOpExpr' groups='DataSetOpExpr' /> = .
</gr>

<h3 class='center-h' data-href="IPCOp_chapter">
    Inter-process communication operators
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='IPCOpExpr' groups="Expr"/> = <GEBNFC name='IPCOpExpr' kind='or'/> .
</gr>

<h4 class='center-h' data-href="ChannelOp_chapter">
    Channel (event) operators
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='ChannelOpExpr' groups="IPCOpExpr"/> = <GEBNFC name='ChannelOpExpr' kind='or'/> .
<EBNFCDECL name='SyncChannelOpExpr' groups='ChannelOpExpr'/> = ( <EBNFC name='SourceChannelOpExpr'/> [ <EBNFC name='AnnotationsList'/> ] ">>" <EBNFC name='DestChannelOpExpr'/> ) | ( <EBNFC name='DestChannelOpExpr'/> [ <EBNFC name='AnnotationsList'/> ] "<<" <EBNFC name='SourceChannelOpExpr'/> ) .
<EBNFCDECL name='AsyncChannelOpExpr' groups='ChannelOpExpr'/> = ( <EBNFC name='SourceChannelOpExpr'/> [ <EBNFC name='AnnotationsList'/> ] "~>>" <EBNFC name='DestChannelOpExpr'/> ) | ( <EBNFC name='DestChannelOpExpr'/> [ <EBNFC name='AnnotationsList'/> ] "<<~" <EBNFC name='SourceChannelOpExpr'/> ) .
<EBNFCDECL name='SourceChannelOpExpr'/> = <EBNFC name='Expr'/> .
<EBNFCDECL name='DestChannelOpExpr'/> = <EBNFC name='Expr'/> .
</gr>

<h4 class='center-h' data-href='WaitOpExpr_chapter'>
wait
</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name='WaitOpExpr' groups='IPCOpExpr' /> =  .
</gr>

<h3 class='center-h' data-href="ErrorOp_chapter">
Error operator
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ErrorOpExpr' groups="Expr"/> = [ <EBNFC name='AnnotationsList'/> ] "error" <EBNFC name='LogicalSentenceVal'/> .
</gr>

<h2 class='center-h' data-href="Statements_chapter">
    Statements
</h2>

<LinkToContent/>

<gr>
<EBNFCDECL name='StatementsSet'/> = <EBNFC name='Statement'/> [ { <EBNFC name='Statement'/> } ] .
<EBNFCDECL name='Statement'/> = <GEBNFC name='Statement' kind='or' /> .
</gr>

<h3 class='center-h' data-href="Scopes_chapter">
    Scopes
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='UsualScope' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "{" [ <EBNFC name='StatementsSet'/> ] "}" [ <EBNFC name='ModalitiesSet'/> ] ";" .
<EBNFCDECL name='UsualScopeDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'UsualScope'/> .
<EBNFCDECL name='ClausedScopeClause'/> .
<EBNFCDECL name='ClausedScopeForStatements' groups="Statement"/> = <TEBNFC name='DefScope' param = 'StatementsSet'/> .
<EBNFCDECL name='ClausedScopeForStatementsDeclExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ClausedScopeForStatements'/> .
</gr>

<h3 class='center-h' data-href="ExpressionStatement_chapter">
    Expression statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ExpressionStatement' groups="Statement"/> = <EBNFC name='Expr'/> ";" .
<EBNFCDECL name='ExpressionStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ExpressionStatement'/> .
</gr>

<h3 class='center-h' data-href="ConditionalStatement_chapter">
    Conditional statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ConditionalStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "if" "(" <EBNFC name='BooleanTypeExpr'/> ")" "{" [ <EBNFC name='StatementsSet'/> ] "}" [ [ <EBNFC name='AnnotationsList'/> ] "elif" "(" <EBNFC name='BooleanTypeExpr'/> ")" "{" [ <EBNFC name='StatementsSet'/> ] "}" ] [ [ <EBNFC name='AnnotationsList'/> ] "else" "{" [ <EBNFC name='StatementsSet'/> ] "}" ] ";" .
<EBNFCDECL name='ConditionalStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ConditionalStatement'/> .
</gr>

<h3 class='center-h' data-href="SwitchStatement_chapter">
    Switch statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='SwitchStatement' groups="Statement"/> .
<EBNFCDECL name='SwitchStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'SwitchStatement'/> .
</gr>

<h3 class='center-h' data-href="TryCatchStatement_chapter">
   Try-catch statement
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='TryCatchStatement' groups="Statement"/> .
<EBNFCDECL name='TryCatchStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'TryCatchStatement'/> .
</pre>

<h3 class='center-h' data-href="ForStatement_chapter">
    For statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ForStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "for" "(" <EBNFC name='InitializerForStatementExpr'/> ";" <EBNFC name='ConditionForStatementExpr'/> ";" <EBNFC name='IteratorForStatementExpr'/> ")" "{" [ <EBNFC name='StatementsSet'/> ] "}" ";" .
<EBNFCDECL name='ForStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ForStatement'/> .
<EBNFCDECL name='InitializerForStatementExpr'/> = <EBNFC name='Expr'/> .
<EBNFCDECL name='ConditionForStatementExpr'/> = <EBNFC name='BooleanTypeExpr'/> .
<EBNFCDECL name='IteratorForStatementExpr'/> = <EBNFC name='Expr'/> .
</gr>

<h3 class='center-h' data-href="ForeachStatement_chapter">
    Foreach statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='ForeachStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "foreach" "(" <EBNFC name='VarExpr'/> "in" <EBNFC name='Expr'/> ")" "{" [ <EBNFC name='StatementsSet'/> ] "}" ";" .
<EBNFCDECL name='ForeachStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ForeachStatement'/> .
</gr>

<h3 class='center-h' data-href="WhileStatement_chapter">
    While statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='WhileStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "while" "(" <EBNFC name='BooleanTypeExpr'/> ")" "{" [ <EBNFC name='StatementsSet'/> ] "}" ";" .
<EBNFCDECL name='WhileStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'WhileStatement'/> .
</gr>

<h3 class='center-h' data-href="DoWhileStatement_chapter">
    Do-while statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='DoWhileStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "do" "{" [ <EBNFC name='StatementsSet'/> ] "}" "while" "(" <EBNFC name='BooleanTypeExpr'/> ")" ";" .
<EBNFCDECL name='DoWhileStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'DoWhileStatement'/> .
</gr>

<h3 class='center-h' data-href="BreakStatement_chapter">
   Break statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='BreakStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "break" ";" .
<EBNFCDECL name='BreakStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'BreakStatement'/> .
</gr>

<h3 class='center-h' data-href="ContinueStatement_chapter">
    Continue statement
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='ContinueStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "continue" ";" .
<EBNFCDECL name='ContinueStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ContinueStatement'/> .
</pre>

<h3 class='center-h' data-href="ReturnStatement_chapter">
    Return statement
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='ReturnStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "return" [ <EBNFC name='Expr'/> ] ";" .
<EBNFCDECL name='ReturnStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'ReturnStatement'/> .
</pre>

<h3 class='center-h' data-href="YieldReturnStatement_chapter">
    Yield-return statement
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='YieldStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] "yield" [ <EBNFC name='Expr'/> ] ";" .
<EBNFCDECL name='YieldStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'YieldStatement'/> .
</pre>

<h3 class='center-h' data-href="TriggerStatement_chapter">
Trigger statement
</h3>

<LinkToContent/>

<gr>
<EBNFCDECL name='TriggerStatement' groups="Statement"/> = <EBNFC name='TriggersContent'/> .
<EBNFCDECL name='TriggerStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'TriggerStatement'/> .
</gr>

<h3 class='center-h' data-href="SynchronizationStatement_chapter">
Synchronization statement
</h3>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='SynchronizationStatement' groups="Statement"/> = [ <EBNFC name='AnnotationsList'/> ] ( "exclusive" | "lock" ) [ "(" <EBNFC name='Identifier'/> [{ "," <EBNFC name='Identifier'/> }] ")" ] "{" [ <EBNFC name='StatementsSet'/> ] "}" .
<EBNFCDECL name='SynchronizationStatementExpr' groups="Expr"/> = <TEBNFC name='NonExprAsExprVal' param = 'SynchronizationStatement'/> .
</pre>

<h2 class='center-h' data-href="Source_code_file_chapter">
    Source code file
</h2>

<LinkToContent/>

<pre class='ebnf-code'>
<EBNFCDECL name='SourceCodeFileContent'/> = <GEBNFC name='SourceCodeFileContent' kind='op_and'/> .
<EBNFCDECL name='ClausedScopeForSourceCodeFilesSet' groups="SourceCodeFileContent"/> = <TEBNFC name='DeclSet' param = 'ClausedScopeForSourceCodeFile'/> .
<EBNFCDECL name='ClausedScopeForSourceCodeFile '/> = <TEBNFC name='DefScope' param = 'SourceCodeFileContent'/> .
</pre>

<p>
	&nbsp;
</p>

<div class='templates'>
    <TEBNFCDECL name='NonExprAsExprVal' param='_ExprType'>
        ( <EBNFC name='_ExprType'/> ) | ( [ <EBNFC name='AnnotationsList'/> ] "(" <EBNFC name='_ExprType'/> [{ <EBNFC name='_ExprType'/> }] ")" )
    </TEBNFCDECL>
	
	<TEBNFCDECL name="ModalitiesExprVal" param='_ExprType'>
	    ( [ <EBNFC name='AnnotationsList'/> ] "{" ( <EBNFC name='_ExprType'/> ) | ([ <EBNFC name='AnnotationsList'/> ] "{" <EBNFC name='_ExprType'/> "}" [{ "," [ <EBNFC name='AnnotationsList'/> ] "{" <EBNFC name='_ExprType'/> "}" }]) "}" ) | ( <EBNFC name='NullTypeExpr'/> )
	</TEBNFCDECL>
	
	<TEBNFCDECL name="DefScope" param='_ExprType'>
	    [ <EBNFC name='AnnotationsList'/> ] "width" "{" <EBNFC name='ClausedScopeClause'/> "}" "def" "{" [ <EBNFC name='_ExprType'/> ] "}" [ <EBNFC name='ModalitiesSet'/> ] ";"
	</TEBNFCDECL>
	
	<TEBNFCDECL name="DefScope_2" param='_ExprType'>
	    [ <EBNFC name='AnnotationsList'/> ] "width" "{" <EBNFC name='ClausedScopeClause'/> "}" "def" "{" _ExprType ] "}" [ <EBNFC name='ModalitiesSet'/> ] ";"
	</TEBNFCDECL>	
	
	<TEBNFCDECL name="DeclSet" param='_ExprType'>
	    <EBNFC name='_ExprType'/> [{ <EBNFC name='_ExprType'/> }]
	</TEBNFCDECL>
	
	<TEBNFCDECL name="UnaryOp" param='_OpLiteral'>
	    <TEBNFC name='UnaryOp_2' param = '"_OpLiteral"'/>
	</TEBNFCDECL>
	
	<TEBNFCDECL name="UnaryOp_2" param='_OpLiteral'>
	    [ <EBNFC name='AnnotationsList'/> ] _OpLiteral <EBNFC name='Expr'/>
	</TEBNFCDECL>
	
	<TEBNFCDECL name="PostfixUnaryOp" param='_OpLiteral'>
	    <TEBNFC name='PostfixUnaryOp_2' param = '"_OpLiteral"'/>
	</TEBNFCDECL>
	
	<TEBNFCDECL name="PostfixUnaryOp_2" param='_OpLiteral'>
	    <EBNFC name='Expr'/> [ <EBNFC name='AnnotationsList'/> ] _OpLiteral
	</TEBNFCDECL>
	
	<TEBNFCDECL name="BinaryOp" param='_OpLiteral'>
	    <TEBNFC name='BinaryOp_2' param = '"_OpLiteral"'/>
	</TEBNFCDECL>
	
	<TEBNFCDECL name='BinaryOp_2' param='_OpLiteral'>
	    <EBNFC name='Expr'/> [ <EBNFC name='AnnotationsList'/> ] _OpLiteral <EBNFC name='Expr'/>
	</TEBNFCDECL>
	
	<TEBNFCDECL name='VariableExpr'>
	    [ <EBNFC name='AnnotationsList'/> ] <EBNFC name='VarIdentifier'/> [ ":" <EBNFC name='TypeIdentifier'/> ]
	</TEBNFCDECL>
	
	<TEBNFCDECL name='CatchTemplate'>
	    [ <EBNFC name='AnnotationsList'/> ] "catch" "(" <EBNFC name='LogicalSentenceVal'/> ")" "{" [ <EBNFC name='StatementsSet'/> ] "}"
	</TEBNFCDECL>
</div>

<!--
<h2 class='center-h' data-href="">

</h2>

<LinkToContent/>

<h3 class='center-h' data-href=''>

</h3>

<LinkToContent/>

<h4 class='center-h' data-href=''>

</h4>

<LinkToContent/>

<gr>
<EBNFCDECL name=''/> = .
</gr>

<EBNFC name=''/>

<pre class='tmp_tchn' title='It is just tech remark for creating this spec!'>

</pre>
-->
