<h1 class='center-h'>Code examples</h1>

<ContentsPlace/>

<h2 class='center-h' data-href="Hello_world">
Hello world!
</h2>

<LinkToContent/>

<code data-lng='soc' example-href='/docs/lng_examples/HelloWorld_Example1.zip'>
npc PeaceKeeper
{
    on Init => 
	{
	     "Begin" >> @>log;

	      "End" >> @>log;
	}
}
</code>

<console>
Begin
End
</console>

<complete_me/>

<h2 class='center-h' data-href="Comments">
Comments
</h2>

<LinkToContent/>

<h3 class='center-h' data-href='Single_line_comment'>
Single line comment
</h3>

<LinkToContent/>

<code data-lng='soc'>
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

		 //@r = @b = 1;
		 @bx >> @>log;

		 "End" >> @>log;
	}
}
</code>

<complete_me/>

<h3 class='center-h' data-href='Multi_line_comment'>
Multi line comment
</h3>

<LinkToContent/>

<code data-lng="soc">
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

		 /*@r = @b = 1;
		 @bx >> @>log;*/

		 "End" >> @>log;
	}
}
</code>

<complete_me/>

<h2 class='center-h' data-href="Variables">
Variables
</h2>

<LinkToContent/>

<h3 class='center-h' data-href='Variables_Example_1'>
Example 1
</h3>

<LinkToContent/>

<code data-lng="soc">
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

		 @r = @b = 1;
		 @b >> @>log;

		 "End" >> @>log;
	}
}
</code>

<complete_me/>

<h3 class='center-h' data-href='Variables_Example_2'>
Example 2
</h3>

<LinkToContent/>

<code data-lng="soc">
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

		 @r = @b = 1;
		 @bx >> @>log;

		 "End" >> @>log;
	}
}
</code>

<complete_me/>

<h2 class='center-h' data-href="Inheritance">
Inheritance
</h2>

<LinkToContent/>

<code data-lng="soc">
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

		 exampleClass is human >> @>log;

		 exampleClass is not human >> @>log;

		 use exampleClass is [0.5] human;

		 exampleClass is human >> @>log;

		 exampleClass is not human >> @>log;

		 use exampleClass is not human;

		 exampleClass is human >> @>log;

		 exampleClass is not human >> @>log;

		 use @@self is linux;

		 @@self is linux >> @>log;

		 "End" >> @>log;
	}
}
</code>

<complete_me/>

<h2 class='center-h' data-href="Calling_host_method">
Calling host method
</h2>

<LinkToContent/>

<h3 class='center-h' data-href='Calling_host_method_Synchronous'>
Synchronous
</h3>

<LinkToContent/>

<code data-lng="soc">
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

                  @@host.`go`(to: #@[25, 30]);

	       "End" >> @>log;
	}
}
</code>

<complete_me/>

<h3 class='center-h' data-href='Calling_host_method_Asynchronous'>
Asynchronous
</h3>

<LinkToContent/>

<code data-lng="soc">
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

           @@host.`go`~(to: #@[25, 30]);
	       @@host.`go`~(to: #@[20, 30]);

	        "End" >> @>log;
	}
}
</code>

<complete_me/>

<h2 class='center-h' data-href="Logic_queries">
Logic queries
</h2>

<LinkToContent/>

<h3 class='center-h' data-href='Logic_queries_Example_1'>
Example 1
</h3>

<LinkToContent/>

<code data-lng="soc">
class exampleClass is human, [0.1] animal
{
	{: male(#Tom) :}
	{: parent(#Piter, #Tom) :}
	{: {son($x, $y)} -> { male($x) & parent($y, $x)} :}
	{: { love($x, $y) } -> { help($x, $y) } :}
}

npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

		 select {: son(?x, ?y) :} >> @>log;

		 "End" >> @>log;
	}
}
</code>

<code data-lng="soc">
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;

		 ? {: son(?x, ?y) :} >> @>log;

		 "End" >> @>log;
	}
}
</code>

<complete_me/>

<h3 class='center-h' data-href='Logic_queries_Example_2'>
Example 2
</h3>

<LinkToContent/>

<code data-lng="soc">

</code>

<complete_me/>

<h3 class='center-h' data-href='Logic_queries_Example_3'>
Example 3
</h3>

<LinkToContent/>

<code data-lng="soc">
npc PeaceKeeper is [0.5] exampleClass
{
    on Init => 
	{
	     "Begin" >> @>log;		 

		 insert {: >: { bird (#1234) } :};

		 "End" >> @>log;
	}
}
</code>

<complete_me/>
