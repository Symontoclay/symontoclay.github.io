<h1 class='center-h'>Language Specification</h1>

<ContentsPlace/>

<h2 class='center-h' data-href='Introduction_chapter'>
Introduction
</h2>

<LinkToContent/>

<p>
This is manual for SymOntoClay DSL.
</p>

<p>
This document contains all implemented grammar. 
You can use It.
</p>

<p>
SymOntoClay DSL is in development now. 
So new parts will be added here right after implementation and internal testing. 
I will try to do this as soon as possible.
</p>

<h2 class='center-h' data-href='Notation_chapter'>
Notation
</h2>

<LinkToContent/>

<p>
The syntax is specified using <ico target='Wikipedia'/><a href='https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form'>Extended Backus-Naur Form (EBNF)</a>.
</p>

<h2 class='center-h' data-href='Source_code_representation_chapter'>
Source code representation
</h2>

<LinkToContent/>

<p>
There are two views of source code file: as set of characters and as set of code entities.
</p>

<h3 class='center-h' data-href='Symbols_chapter'>
Symbols
</h3>

<LinkToContent/>

<h4 class='center-h' data-href='Characters_chapter'>
Characters
</h4>

<LinkToContent/>

<p>
Source code is Unicode text encoded in <ico target='Wikipedia'/><a href='https://en.wikipedia.org/wiki/UTF-8'>UTF-8</a>.
</p>

<gr>
<EBNFCDECL name='Newline'/> = /* the Unicode code point U+000A */ .
<EBNFCDECL name='UnicodeChar'/> = /* an arbitrary Unicode code point except <EBNFC name='Newline'/> */ .
</gr>

<h4 class='center-h' data-href='Letters_and_digits_chapter'>
Letters and digits
</h4>

<LinkToContent/>

<p>
The underscore character _ (U+005F) is considered a letter.
</p>

<gr>
<EBNFCDECL name='Letter'/> = "A" ... "Z" | "a" ... "z" | "_" .
<EBNFCDECL name='DecimalDigit'/> = "0" â€¦ "9" .
</gr>

<h3 class='center-h' data-href='Kind_of_source_code_files_chapter'>
Kind of source code files
</h3>

<LinkToContent/>

<p>
There are different kinds of source code files which can contain different code entities.
</p>

<gr>
<EBNFCDECL name='SourceCodeFileContent'/> = <GEBNFC name='SourceCodeFileContent' kind='or'/> .
</gr>

<h4 class='center-h' data-href='World_source_code_file_chapter'>
World source code file
</h4>

<LinkToContent/>

<p>
The file contains <a href='#World_chapter'>World declaration</a>.
There can be only one World declaration in the file.
Also this file can contain other content which is allowed in <a href='#Class_source_code_file_chapter'>Class source code file</a>.
</p>

<gr>
<EBNFCDECL name='WorldSourceCodeFileContent' groups='SourceCodeFileContent'/> = [ <EBNFC name='ClassSourceCodeFileContent'/> ] <GEBNFC name='WorldSourceCodeFileContent' kind='op_and'/> [ <EBNFC name='ClassSourceCodeFileContent'/> ] .
</gr>

<h4 class='center-h' data-href='NPC_source_code_file_chapter'>
NPC source code file
</h4>

<LinkToContent/>

<p>
The file contains <a href='#NPC_chapter'>NPC declaration</a>.
There can be only one NPC declaration in the file.
Also this file can contain other content which is allowed in <a href='#Class_source_code_file_chapter'>Class source code file</a>.
</p>

<gr>
<EBNFCDECL name='NPCSourceCodeFileContent' groups='SourceCodeFileContent'/> = [ <EBNFC name='ClassSourceCodeFileContent'/> ] <GEBNFC name='NPCSourceCodeFileContent' kind='op_and'/> [ <EBNFC name='ClassSourceCodeFileContent'/> ] .
</gr>

<h4 class='center-h' data-href='Host_source_code_file_chapter'>
Host source code file
</h4>

<LinkToContent/>

<p>
The file contains <a href='#Host_chapter'>Host declaration</a>.
There can be only one Host declaration in the file.
Also this file can contain other content which is allowed in <a href='#Class_source_code_file_chapter'>Class source code file</a>.
</p>

<gr>
<EBNFCDECL name='HostSourceCodeFileContent' groups='SourceCodeFileContent'/> = [ <EBNFC name='ClassSourceCodeFileContent'/> ] <GEBNFC name='HostSourceCodeFileContent' kind='op_and'/> [ <EBNFC name='ClassSourceCodeFileContent'/> ] .
</gr>

<h4 class='center-h' data-href='Class_source_code_file_chapter'>
Class source code file
</h4>

<LinkToContent/>

<p>
The file contains all possible code entities, except <a href='#World_chapter'>World</a>, <a href='#NPC_chapter'>NPC</a> and <a href='#Host_chapter'>Host</a> declarations.
There exist special source code files for these code entities.
But content of Class source code file can be included into <a href='#World_source_code_file_chapter'>World</a>, <a href='#NPC_source_code_file_chapter'>NPC</a> and <a href='#Host_source_code_file_chapter'>Host</a> source code files.
</p>

<gr>
<EBNFCDECL name='ClassSourceCodeFileContent' groups='SourceCodeFileContent'/> = <GEBNFC name='ClassSourceCodeFileContent' kind='op_and'/> .
</gr>

<h2 class='center-h' data-href='Lexical_elements_chapter'>
Lexical elements
</h2>

<LinkToContent/>

<h3 class='center-h' data-href='Comments_chapter'>
Comments
</h3>

<LinkToContent/>

<p>
SymOntoClay supports both single and multiline comments.
It is a programmer-readable explanation or annotation of source code like in many other programming languages.
Also It helps to cut temporarily unused code fragments.
</p>

<gr>
<EBNFCDECL name='SingleLineComment'/> = "//" [{ <EBNFC name='UnicodeChar'/> }] <EBNFC name='NewLine'/> .
</gr>

<code data-lng='soc'>
//@r = @b = 1;
</code>

<gr>
<EBNFCDECL name='MultiLineComment'/> = "/*" [{ <EBNFC name='UnicodeChar'/> }] "*/" .
</gr>

<code data-lng='soc'>
 /*@r = @b = 1;
@bx >> @>log;*/
</code>

<h3 class='center-h' data-href='Tokens_chapter'>
Tokens
</h3>

<LinkToContent/>

<p>
Tokens form the vocabulary of the SymOntoClay DSL.
There are four classes: identifiers, keywords, operators and punctuation, and literals. 
</p>

<h3 class='center-h' data-href='Identifiers_chapter'>
Identifiers
</h3>

<LinkToContent/>

<p>
Identifiers name code entities.
</p>

<p>
Since SymOntoClay has many kinds of code entities, I have decided It will be better to recognize kind of code entity by identifier.
So SymOntoClay has many kinds of identifiers with different prefixes.
Each of these identifiers has Its own meaning in code. 
</p>

<gr>
<EBNFCDECL name='Identifier'/> = <GEBNFC name='Identifier' kind='or' /> .
</gr>

<h4 class='center-h' data-href='ConceptIdentifier_chapter'>
Concept identifier
</h4>

<LinkToContent/>

<p>
Names a concept.
</p>

<gr>
<EBNFCDECL name='ConceptIdentifier' groups='Identifier;TypeIdentifier;ConstExpr'/> = <TEBNFC name='BaseIdentifier'/> .
</gr>

<code data-lng='soc'>
a
_a
a2
aB
ab_1
Great_Britain
`Great Britain`
</code>

<h4 class='center-h' data-href='InstanceIdentifier_chapter'>
Instance identifier
</h4>

<LinkToContent/>

<p>
Names an instance of concept.
</p>

<gr>
<EBNFCDECL name='InstanceIdentifier' groups='Identifier;TypeIdentifier;ConstExpr'/> = "#" <TEBNFC name='BaseIdentifier'/> .
</gr>

<code data-lng='soc'>
#123
</code>

<h4 class='center-h' data-href='VarIdentifier_chapter'>
Variable identifier
</h4>

<LinkToContent/>

<p>
Names a <a href='#Variable_chapter'>variable</a>.
</p>

</gr>
<EBNFCDECL name='VarIdentifier' groups='Identifier;ConstExpr'/> = "@" <TEBNFC name='BaseIdentifier'/> .
</gr>

<code data-lng='soc'>
@a
</code>

<h4 class='center-h' data-href='SysVarIdentifier_chapter'>
System variable identifier
</h4>

<LinkToContent/>

<p>
Names a <a href='#System_variable_chapter'>system variable</a>
</p>

<gr>
<EBNFCDECL name='SysVarIdentifier' groups='Identifier;ConstExpr'/> = "@@" <TEBNFC name='BaseIdentifier'/> .
</gr>

<code data-lng='soc'>
@@host
</code>

<h4 class='center-h' data-href='QuestionVarIdentifier_chapter'>
Question variable identifier
</h4>

<LinkToContent/>

<p>
Names a variable for describing select-pattern in <a href='#SelectOp_chapter'>select query</a>.
This variable represents information which should be found in the select query.
</p>

<gr>
<EBNFCDECL name='QuestionVarIdentifier' groups='Identifier'/> = "?" <TEBNFC name='BaseIdentifier'/> .
</gr>

<code data-lng='soc'>
?x
</code>

<h4 class='center-h' data-href='LogicRuleVarIdentifier_chapter'>
Logic rule variable identifier
</h4>

<LinkToContent/>

<p>
Names special variable for <a href='#Logic_rule_chapter'>Logic rule</a>.
</p>

<gr>
<EBNFCDECL name='LogicRuleVarIdentifier' groups='Identifier'/> = "$" <TEBNFC name='BaseIdentifier'/> .
</gr>

<code data-lng='soc'>
$x
</code>

<h4 class='center-h' data-href='ChannelIdentifier_chapter'>
Channel identifier
</h4>

<LinkToContent/>

<p>
Names <a href='#Channel_chapter'>Channel</a>.
</p>

<gr>
<EBNFCDECL name='ChannelIdentifier' groups='Identifier;ConstExpr'/> = "@>" <TEBNFC name='BaseIdentifier'/> .
</gr>

<code data-lng='soc'>
@>log
</code>

<h3 class='center-h' data-href='Keywords_chapter'>
Keywords
</h3>

<LinkToContent/>

<p>
Some words is used as keywords in syntax.
But the words can be used as identifiers in other places. 
</p>

<keywords cols='4'>
    <kw name='npc'/>
	<kw name='class'/>
	<kw name='world'/>
	<kw name='host'/>
	<kw name='is'/>
	<kw name='on'/>
	<kw name='use'/>
	<kw name='not'/>
	<kw name='select'/>
	<kw name='insert'/>
</keywords>

<h3 class='center-h' data-href='Operators_and_punctuation_chapter'>
Operators and punctuation
</h3>

<LinkToContent/>

<p>
The following character sequences represent <a href='#Operators_chapter'>operators</a> and punctuation:
</p>

<items cols='4'>
    <item value='?'/>
	<item value='='/>
	<item value='&'/>
	<item value='>>'/>
	<item value='=>'/>
	<item value=':'/>
	<item value=';'/>
	<item value=','/>
	<item value='('/>
	<item value=')'/>
	<item value='['/>
	<item value=']'/>
	<item value='{'/>
	<item value='}'/>
</items>

<h3 class='center-h' data-href='Integer_literal_chapter'>
Integer literal
</h3>

<LinkToContent/>

<p>
An integer literal is a sequence of digits representing an <a href='#Constant_expression_chapter'>integer constant</a>.
Now integer literal has only decimal base.
</p>

<gr>
<EBNFCDECL name='IntegerLiteral' groups='NumberExpr'/> = <EBNFC name='DecimalDigit'/> [ { <EBNFC name='DecimalDigit'/> } ] .
</gr>

<code data-lng='soc'>
42
</code>

<h3 class='center-h' data-href='Floating_point_literal_chapter'>
Floating-point literal
</h3>

<LinkToContent/>

<p>
A floating-point literal is a decimal or hexadecimal representation of a <a href='#Constant_expression_chapter'>floating-point constant</a>.
</p>

<p>
A floating-point literal consists of an integer part (decimal digits), a decimal point and a fractional part (decimal digits).
Now floating-point literal has only decimal base.
</p>

<gr>
<EBNFCDECL name='FloatPointLiteral' groups='NumberExpr'/> = (  <EBNFC name='DecimalDigit'/> [ { <EBNFC name='DecimalDigit'/> } ] ) "." (  <EBNFC name='DecimalDigit'/> [ { <EBNFC name='DecimalDigit'/> } ] ) .
</gr>

<code data-lng='soc'>
36.6
</code>

<h3 class='center-h' data-href='String_literal_chapter'>
String literal
</h3>

<LinkToContent/>

<p>
A string literal represents a <a href='#Constant_expression_chapter'>string constant</a> obtained from concatenating a sequence of characters.
</p>

<gr>
<EBNFCDECL name='StringLiteral' groups='ConstExpr'/> = (""" <EBNFC name='UnicodeChar'/> [{ <EBNFC name='UnicodeChar'/> }] """) | ("'" <EBNFC name='UnicodeChar'/> [{ <EBNFC name='UnicodeChar'/> }] "'") .
</gr>

<code data-lng='soc'>
"abc"
'abc'
</code>

<h2 class='center-h' data-href='Objects_declaration_chapter'>
Objects declaration
</h2>

<LinkToContent/>

<p>
Everything is an object.
The classical type-instance relationship is using, but there is not strict and fundamental distinction between the two.
</p>

<p>
Some objects have a special meaning.
So Class represents a general concept which can have many instances.
</p>

<p>
Some objects have special engine support to make writing code easier and faster, or as entry point locators.
</p>

<h3 class='center-h' data-href='Class_chapter'>
Class
</h3>

<LinkToContent/>

<p>
Represents a general concept which can have many instances.
</p>

<p>
In general, It is similar to the concept 'class' in other OOP languages.
</p>

<gr>
<EBNFCDECL name='ClassDeclSet' groups='ClassSourceCodeFileContent'/> = <TEBNFC name='DeclSet' param = 'ClassDecl'/> .
<EBNFCDECL name='ClassDecl'/> = "class" <EBNFC name='ConceptIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] <br/> "{"<br/> [ <TEBNFC name='DeclSet' param = 'ClassBodyContent'/> ] <br/> "}" .
<EBNFCDECL name='ClassBodyContent'/> = <GEBNFC name='ClassBodyContent' kind='op_and'/> .
</gr>

<code data-lng='soc'>
class exampleClass
{
}
</code>

<code data-lng='soc'>
class exampleClass is human, [0.1] animal
{
}
</code>

<h3 class='center-h' data-href='NPC_chapter'>
NPC
</h3>

<LinkToContent/>

<p>
It is root object and entry point of <a href='/docs/engine_concepts/index.html#Common_concepts_NPC'>NPC</a>.
</p>

<gr>
<EBNFCDECL name='NPCIdentifier'/> = <GEBNFC name='TypeIdentifier' kind='or'/> .
<EBNFCDECL name='NPCDecl' groups='NPCSourceCodeFileContent'/> = "npc" <EBNFC name='NPCIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] <br/> "{"<br/> [ <TEBNFC name='DeclSet' param = 'NPCBodyContent'/> ] <br/> "}" .
<EBNFCDECL name='NPCBodyContent'/> = [ <GEBNFC name='NPCBodyContent' kind='op_and'/> ] .
</gr>

<code data-lng='soc'>
npc PeaceKeeper
{
    on Init => 
	{
    }
}
</code>

<code data-lng='soc'>
npc PeaceKeeper is human
{
    on Init => 
	{
    }
}
</code>

<h3 class='center-h' data-href='World_chapter'>
World
</h3>

<LinkToContent/>

<p>
It is root object of <a href='/docs/engine_concepts/index.html#Common_concepts_World'>World</a>.
</p>

<gr>
<EBNFCDECL name='WorldIdentifier'/> = <GEBNFC name='TypeIdentifier' kind='or'/> .
<EBNFCDECL name='WorldDecl' groups='WorldSourceCodeFileContent'/> = "world" <EBNFC name='WorldIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] <br/> "{"<br/> [ <TEBNFC name='DeclSet' param = 'WorldBodyContent'/> ] <br/> "}" .
<EBNFCDECL name='WorldBodyContent'/> = <GEBNFC name='WorldBodyContent' kind='op_and'/> .
</gr>

<code data-lng='soc'>
world `Lost town`
{
}
</code>

<h3 class='center-h' data-href='Host_chapter'>
Host
</h3>

<LinkToContent/>

<p>
It is root object of <a href='/docs/engine_concepts/index.html#Common_concepts_Host'>Host</a>.
</p>

<gr>
<EBNFCDECL name='HostIdentifier'/> = <GEBNFC name='TypeIdentifier' kind='or'/> .
<EBNFCDECL name='HostDecl' groups='HostSourceCodeFileContent'/> = "host" <EBNFC name='HostIdentifier'/> [ <EBNFC name='InheritanceDecl'/> ] <br/> "{"<br/> [ <TEBNFC name='DeclSet' param = 'HostBodyContent'/> ] <br/> "}" .
<EBNFCDECL name='HostBodyContent'/> = <GEBNFC name='HostBodyContent' kind='op_and'/> .
</gr>

<code data-lng='soc'>
host `Crazy 1`
{
}
</code>

<h3 class='center-h' data-href='Waypoint_chapter'>
Waypoint
</h3>

<LinkToContent/>

<p>

</p>

<complete_me/>

<gr>
<EBNFCDECL name='WaypointDecl' groups='Expr'/> = "#@" "[" <EBNFC name='WaypointDistance'/> "," <EBNFC name='WaypointAngleInDegrees'/> "]" .
<EBNFCDECL name='WaypointDistance'/> = <EBNFC name='NumberExpr'/> .
<EBNFCDECL name='WaypointAngleInDegrees'/> = <EBNFC name='NumberExpr'/> .
</gr>

<complete_me/>

<code data-lng='soc'>
#@[25, 30]
</code>

<complete_me/>

<h3 class='center-h' data-href='Fact_chapter'>
Fact
</h3>

<LinkToContent/>

<p>

</p>

<complete_me/>

<gr>
<EBNFCDECL name='FactDeclSet' groups='ClassSourceCodeFileContent;ClassBodyContent;NPCBodyContent;WorldBodyContent;HostBodyContent'/> = <TEBNFC name='DeclSet' param = 'FactDecl'/> .
<EBNFCDECL name='FactDecl'/> = "{:" ( <EBNFC name='FactSection'/> | <EBNFC name='FactSentence'/> ) ":}" .
<EBNFCDECL name='FactSection'/> = ">:" "{" <EBNFC name='FactSentence'/> "}" .
<EBNFCDECL name='FactSentence'/> = <EBNFC name='FactPredicate'/> .
<EBNFCDECL name='FactPredicate'/> = <EBNFC name='ConceptIdentifier'/> "(" <EBNFC name='FactPredicateParam'/> [ { "," <EBNFC name='FactPredicateParam'/> } ] ")" .
<EBNFCDECL name='FactPredicateParam'/> = <GEBNFC name='TypeIdentifier' kind='or'/> .
</gr>

<complete_me/>

<code data-lng='soc'>

</code>

<complete_me/>

<h3 class='center-h' data-href='Logic_rule_chapter'>
Logic rule
</h3>

<LinkToContent/>

<p>

</p>

<complete_me/>

<gr>
<EBNFCDECL name='LogicRuleDeclSet' groups='ClassSourceCodeFileContent;ClassBodyContent;NPCBodyContent;WorldBodyContent;HostBodyContent'/> = <TEBNFC name='DeclSet' param = 'LogicRuleDecl'/> .
<EBNFCDECL name='LogicRuleDecl'/> = "{:" <EBNFC name='LogicRulePrimarySection'/> <EBNFC name='ImplicationSymbol'/> <EBNFC name='LogicRuleSecondarySection'/> ":}" .
<EBNFCDECL name='LogicRulePrimarySection'/> = ">:" "{" <EBNFC name='LogicRuleSentence'/> "}" .
<EBNFCDECL name='LogicRuleSecondarySection'/> = "{" <EBNFC name='LogicRuleSentence'/> "}" .
<EBNFCDECL name='ImplicationSymbol'/> = "->" .
<EBNFCDECL name='LogicRuleSentence'/> = <EBNFC name='LogicRulePredicate'/> [ { <EBNFC name='AndOpExpr'/> <EBNFC name='LogicRulePredicate'/> } ] .
<EBNFCDECL name='LogicRulePredicate'/> = <EBNFC name='ConceptIdentifier'/> "(" <EBNFC name='LogicRulePredicateParam'/> [ { "," <EBNFC name='LogicRulePredicateParam'/> } ] ")" .
<EBNFCDECL name='LogicRulePredicateParam'/> = <GEBNFC name='TypeIdentifier' kind='or'/> | <EBNFC name='LogicRuleVarIdentifier'/> .
</gr>

<complete_me/>

<code data-lng='soc'>

</code>

<complete_me/>

<h2 class='center-h' data-href='Common_objects_parts_chapter'>
Common objectsâ€™ parts
</h2>

<LinkToContent/>

<p>
The following parts can be in all or almost all kinds of objects.
</p>

<h3 class='center-h' data-href='Inheritance_chapter'>
Inheritance
</h3>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='InheritanceDecl'/> = "is" <EBNFC name='InheritanceDeclItem'/> [ { "," <EBNFC name='InheritanceDeclItem'/> } ] .
<EBNFCDECL name='InheritanceDeclItem'/> = <TEBNFC name='InheritanceDeclItem'/> .
</gr>

<complete_me/>

<h3 class='center-h' data-href='Trigger_chapter'>
Trigger
</h3>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='TriggersContent' groups='ClassBodyContent;NPCBodyContent'/> = "on" <EBNFC name='LifecycleTriggerIdentifier'/> "=>" <br/> "{" <br/> <EBNFC name='StatementsSet'/> <br/> "}" .
</gr>

<complete_me/>

<h4 class='center-h' data-href='Lifecycle_triggers_chapter'>
Lifecycle triggers
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='LifecycleTriggerIdentifier'/> = <GEBNFC name='LifecycleTriggerIdentifier' kind='or' /> .
</gr>

<complete_me/>

<h5 class='center-h' data-href='Init_Lifecycle_trigger_chapter'>
Init
</h5>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='InitLifecycleTriggerIdentifier' groups='LifecycleTriggerIdentifier'/> = "Init" .
</gr>

<complete_me/>

<h2 class='center-h' data-href='Expressions_chapter'>
Expressions
</h2>

<LinkToContent/>

<gr>
<EBNFCDECL name='Expr'/> = <GEBNFC name='Expr' kind='or'/> .
</gr>

<h3 class='center-h' data-href='Constant_expression_chapter'>
Constant expression
</h3>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='ConstExpr' groups='Expr'/> = <GEBNFC name='ConstExpr' kind='or'/> .
<EBNFCDECL name='NumberExpr' groups='ConstExpr'/> = <GEBNFC name='NumberExpr' kind='or'/> .
</gr>

<complete_me/>

<h3 class='center-h' data-href='Variable_chapter'>
Variable
</h3>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='VarExpr' groups='Expr'/> = <EBNFC name='VarIdentifier'/> .
</gr>

<complete_me/>

<h3 class='center-h' data-href='System_variable_chapter'>
System variable
</h3>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='SysVarExpr' groups='Expr'/> = <EBNFC name='SysVarIdentifier'/> .
</gr>

<complete_me/>

<h4 class='center-h' data-href='Available_system_variables_chapter'>
Available system variables
</h4>

<LinkToContent/>

<h5 class='center-h' data-href='Self_system_variable_chapter'>
@@self
</h5>

<LinkToContent/>

<complete_me/>

<h5 class='center-h' data-href='Host_system_variable_chapter'>
@@host
</h5>

<LinkToContent/>

<complete_me/>

<h3 class='center-h' data-href='Channel_chapter'>
Channel
</h3>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='ChannelExpr' groups='Expr'/> = <EBNFC name='ChannelIdentifier'/> .
</gr>

<complete_me/>

<h4 class='center-h' data-href='Available_system_channels_chapter'>
Available system channels
</h4>

<LinkToContent/>

<h5 class='center-h' data-href='Log_system_channel_chapter'>
@>log
</h5>

<LinkToContent/>

<complete_me/>

<h3 class='center-h' data-href='Operators_chapter'>
Operators
</h3>

<LinkToContent/>

<complete_me/>

<p>
<table class='std-table' style='width: 400px;' border='1' cellspacing='0'>
    <tr>
	    <th class='center-h'>Precedence</th>
		<th class='center-h'>Operators</th>
		<th class='center-h'>Associativity</th>
    </tr>
	<tr>
	    <th rowspan='5' class='center-h'>
		2
		<p><small>highest</small></p>
		</th>
	    <td>.</td>
	    <td rowspan='5'>Left-to-right</td>	
	</tr>
	<tr>
	    <td>()</td>
	</tr>
	<tr>
	    <td>select</td>
	</tr>
	<tr>
	    <td>?</td>
	</tr>
	<tr>
	    <td>insert</td>
	</tr>
	<tr>
	    <th rowspan='3' class='center-h'>10</th>
	    <td>is</td>
	    <td rowspan='3'>Left-to-right</td>
	</tr>
	<tr>
	    <td>is not</td>
	</tr>
	<tr>
	    <td>use is</td>
	</tr>
	<tr>
	    <th class='center-h'>14</th>
	    <td>&amp;</td>
		<td>Left-to-right</td>
	</tr>
	<tr>
	    <th class='center-h'>15</th>
	    <td>&gt;&gt;</td>
	    <td>Left-to-right</td>
	</tr>
	<tr>
	    <th class='center-h'>16</th>
	    <td>=</td>
	    <td>Right-to-left</td>
	</tr>
	<tr>
	    <th class='center-h'>17</th>
	    <td>,</td>
	    <td>Left-to-right</td>
	</tr>	
</table>
<p>

<complete_me/>

<h3 class='center-h' data-href='Assignment_operators_chapter'>
Assignment operators
</h3>

<LinkToContent/>

<h4 class='center-h' data-href='AssignmentOp_chapter'>
Operator "="
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='AssignmentOpExpr' groups='Expr'/> = <TEBNFC name='BinaryOp' param = '='/> .
</gr>

<complete_me/>

<h3 class='center-h' data-href='LogicOp_chapter'>
    Logic operators
</h3>

<LinkToContent/>

<h4 class='center-h' data-href='AndOp_chapter'>
    Operator "&"
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='AndOpExpr'/> = <TEBNFC name='BinaryOp_2' param = '"&"'/>
</gr>

<h3 class='center-h' data-href='Member_access_operators_chapter'>
Member access operators
</h3>

<LinkToContent/>

<h4 class='center-h' data-href='PointerOp_chapter'>
Operator "."
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='PointerOpExpr' groups='Expr' /> = <TEBNFC name='BinaryOp' param = '.'/> .
</gr>

<complete_me/>

<h3 class='center-h' data-href='Call_operators_chapter'>
Call operators
</h3>

<LinkToContent/>

<h4 class='center-h' data-href='CallOp_chapter'>
Operator "()"
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='CallOpExpr'/> = <EBNFC name='Expr'/> [ "~" ] "(" <EBNFC name='NamedParamsOfCallOpExprSet'/> ")" .
<EBNFCDECL name='NamedParamsOfCallOpExprSet'/> = <EBNFC name='NamedParamOfCallOpExpr'/> [ { "," <EBNFC name='NamedParamOfCallOpExpr'/> } ] .
<EBNFCDECL name='NamedParamOfCallOpExpr'/> =  <EBNFC name='ConceptIdentifier'/> ":" <EBNFC name='Expr'/> .
</gr>

<complete_me/>

<h3 class='center-h' data-href='Inheritance_operators_chapter'>
Inheritance operators
</h3>

<LinkToContent/>

<h4 class='center-h' data-href='IsOp_chapter'>
Operator "is"
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='IsOpExpr' groups='Expr'/> = <TEBNFC name='IsOpExprBody'/> .
</gr>

<complete_me/>

<h4 class='center-h' data-href='UseIsOp_chapter'>
Operator "use is"
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='UseIsOpExpr' groups='Expr'/> = "use" <TEBNFC name='IsOpExprBody'/> .
</gr>

<complete_me/>

<h3 class='center-h' data-href='Stream_operators_chapter'>
Stream operators
</h3>

<LinkToContent/>

<h4 class='center-h' data-href='StreamOp_chapter'>
Operator ">>"
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='SourceOfStreamOpExpr'/> = <EBNFC name='Expr'/> .
<EBNFCDECL name='DestOfStreamOpExpr'/> = <EBNFC name='Expr'/> .
<EBNFCDECL name='LeftRightStreamOpExpr' groups='Expr'/> = <EBNFC name='SourceOfStreamOpExpr'/> ">>" <EBNFC name='DestOfStreamOpExpr'/> .
</gr>

<complete_me/>

<h3 class='center-h' data-href='Data_source_operators_chapter'>
Data source operators
</h3>

<LinkToContent/>

<h4 class='center-h' data-href='SelectOp_chapter'>
select (Operator "?")
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='SelectOpExpr' groups='Expr'/> = ( "select" | "?" ) ( <EBNFC name='FactDecl'/> | <EBNFC name='SelectQuery'/> ) .
<EBNFCDECL name='SelectQuery'/> = "{:" ( <EBNFC name='SelectQuerySection'/> | <EBNFC name='SelectQuerySentence'/> ) ":}" .
<EBNFCDECL name='SelectQuerySection'/> = ">:" "{" <EBNFC name='SelectQuerySentence'/> "}" .
<EBNFCDECL name='SelectQuerySentence'/> = <EBNFC name='SelectQueryPredicate'/> .
<EBNFCDECL name='SelectQueryPredicate'/> = ( <EBNFC name='ConceptIdentifier'/> | <EBNFC name='QuestionVarIdentifier'/> ) "(" <EBNFC name='SelectQueryPredicateParam'/> [ { "," <EBNFC name='SelectQueryPredicateParam'/> } ] ")" .
<EBNFCDECL name='SelectQueryPredicateParam'/> = <GEBNFC name='TypeIdentifier' kind='or'/> | <EBNFC name='QuestionVarIdentifier'/> .
</gr>

<complete_me/>

<h4 class='center-h' data-href='InsertOp_chapter'>
insert
</h4>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='InsertOpExpr' groups='Expr'/> = "insert" <EBNFC name='FactDecl'/> .
</gr>

<complete_me/>

<h2 class='center-h' data-href='Statements_chapter'>
Statements
</h2>

<LinkToContent/>

<gr>
<EBNFCDECL name='StatementsSet'/> = <TEBNFC name='DeclSet' param = 'Statement'/> .
<EBNFCDECL name='Statement'/> = <GEBNFC name='Statement' kind='or' /> .
</gr>

<h3 class='center-h' data-href='Expression_statement_chapter'>
Expression statement
</h3>

<LinkToContent/>

<complete_me/>

<gr>
<EBNFCDECL name='ExpressionStatement' groups='Statement'/> = <EBNFC name='Expr'/> ";" .
</gr>

<complete_me/>

<p>
	&nbsp;
</p>

<div class='templates'>
    <TEBNFCDECL name='BaseIdentifier'>
	    (( <EBNFC name='Letter'/> { <EBNFC name='Letter'/> | <EBNFC name='DecimalDigit'/> } ) | ( "`" { <EBNFC name='UnicodeChar'/> } "`"))
	</TEBNFCDECL>
	
	<TEBNFCDECL name='DeclSet' param='_ExprType'>
	    <EBNFC name='_ExprType'/> [{ <EBNFC name='_ExprType'/> }]
	</TEBNFCDECL>
	
	<TEBNFCDECL name='BinaryOp' param='_OpLiteral'>
	    <TEBNFC name='BinaryOp_2' param = '"_OpLiteral"'/>
	</TEBNFCDECL>
	
	<TEBNFCDECL name='BinaryOp_2' param='_OpLiteral'>
	    <TEBNFC name='BinaryOp_base' param = '_OpLiteral' param2="<EBNFC name='Expr'/>"/>
	</TEBNFCDECL>
	
	<TEBNFCDECL name='BinaryOp_base' param='_OpLiteral' param2='_ExpType'>
	    _ExpType _OpLiteral _ExpType
	</TEBNFCDECL>
	
	<TEBNFCDECL name='InheritanceDeclItem'>
	    [ "[" <EBNFC name='NumberExpr'/> "]" ] ( <GEBNFC name='TypeIdentifier' kind='or'/> )
	</TEBNFCDECL>
	
	<TEBNFCDECL name='IsOpExprBody'>
	    ( <GEBNFC name='TypeIdentifier' kind='or'/> ) "is" [ "not" ] <TEBNFC name='InheritanceDeclItem'/>
	</TEBNFCDECL>
</div>
